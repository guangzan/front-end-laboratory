{"version":3,"sources":["webpack:///./node_modules/@vueuse/shared/dist/index.esm.js","webpack:///./node_modules/@vueuse/core/dist/index.esm.js","webpack:///./src/components/Palette.vue","webpack:///./src/components/Palette.vue?71f5","webpack:///./node_modules/vooks/es/use-false-until-truthy.js","webpack:///./node_modules/vueuc/es/shared/v-node.js","webpack:///./node_modules/vueuc/es/lazy-teleport/src/index.js","webpack:///./node_modules/vooks/es/use-merged-state.js","webpack:///./node_modules/seemly/es/dom/unwrap-element.js","webpack:///./node_modules/seemly/es/dom/get-scroll-parent.js","webpack:///./node_modules/naive-ui/es/back-top/styles/_common.js","webpack:///./node_modules/naive-ui/es/back-top/styles/light.js","webpack:///./node_modules/naive-ui/es/back-top/src/BackTopIcon.js","webpack:///./node_modules/naive-ui/es/_styles/transitions/fade-in-scale-up.cssr.js","webpack:///./node_modules/naive-ui/es/back-top/src/styles/index.cssr.js","webpack:///./node_modules/naive-ui/es/back-top/src/BackTop.js","webpack:///./src/views/tools/ColorPicker.vue","webpack:///./src/views/tools/ColorPicker.vue?f8c8","webpack:///./node_modules/vue-demi/lib/index.esm.js","webpack:///./node_modules/naive-ui/es/message/src/use-message.js","webpack:///./node_modules/naive-ui/es/_utils/css/format-length.js"],"names":["isClient","window","isString","Object","prototype","toString","val","noop","tryOnUnmounted","fn","useTimeoutFn","cb","interval","immediate","isPending","timer","clear","clearTimeout","stop","value","start","args","setTimeout","isActive","defaultWindow","undefined","defaultNavigator","document","navigator","useEventListener","target","event","listener","options","cleanup","stopWatch","el","addEventListener","removeEventListener","flush","useClipboard","read","source","copiedDuring","events","isSupported","Boolean","text","copied","timeout","updateText","clipboard","readText","then","async","copy","writeText","SwipeDirection","_hoisted_1","class","_hoisted_2","expose","props","color","type","Array","required","title","String","setup","__props","message","success","_ctx","_cache","item","index","key","style","background","onClick","$event","useFalseUntilTruthy","originalRef","currentRef","getSlot","slots","slotName","slot","Error","name","to","default","disabled","show","showTeleport","mergedTo","this","$slots","useMergedState","controlledStateRef","uncontrolledStateRef","unwrapElement","querySelector","getParentNode","node","nodeType","parentNode","getScrollParent","documentElement","overflow","overflowX","overflowY","getComputedStyle","test","width","height","borderRadius","iconSize","vars","popoverColor","textColor2","primaryColorHover","primaryColorPressed","assign","textColor","iconColor","iconColorHover","iconColorPressed","boxShadow","boxShadowHover","boxShadowPressed","backTopLight","common","self","viewBox","version","xmlns","xlinkHref","stroke","transform","d","cubicBezierEaseIn","cubicBezierEaseOut","transformDebounceScale","transformOrigin","duration","enterScale","originalTransform","originalTransition","transition","opacity","pointerEvents","backTopProps","right","Number","bottom","visibilityHeight","listenTo","Function","validator","warn","onShow","onHide","inheritAttrs","mergedClsPrefixRef","scrollTopRef","uncontrolledShowRef","DomInfoReadyRef","controlledShowRef","mergedShowRef","transitionDisabledRef","placeholderRef","styleRef","scrollElement","scrollListenerRegistered","_a","_b","call","themeRef","init","scrollEl","handleScroll","handleClick","e","nodeName","scrollTo","top","behavior","scrollTop","handleAfterEnter","mergedShow","isMounted","DomInfoReady","transitionDisabled","mergedClsPrefix","cssVars","cubicBezierEaseInOut","ref","appear","onAfterEnter","$attrs","clsPrefix","BackTopIcon","paletteDataList","Palette","isVue2","isVue3","Vue2","install","set","isArray","length","Math","max","splice","del","useMessage","api","pureNumberRegex","numberRegex","formatLength","c","offset","attachPx","result","exec","replace"],"mappings":"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","file":"js/chunk-59e3265b.cfdf05ef.js","sourcesContent":["import { computed, unref, watch, ref, customRef, isVue3, isRef, reactive, toRef, isVue2, getCurrentInstance, onMounted, nextTick, onUnmounted } from 'vue-demi';\n\n/**\r\n * `AND` conditions for refs.\r\n *\r\n * @see https://vueuse.org/and\r\n */\r\nfunction and(...args) {\r\n    return computed(() => args.every(i => unref(i)));\r\n}\n\n/**\r\n * Two-way refs synchronization.\r\n *\r\n * @param a\r\n * @param b\r\n */\r\nfunction biSyncRef(a, b) {\r\n    const flush = 'sync';\r\n    const stop1 = watch(a, (newValue) => {\r\n        b.value = newValue;\r\n    }, {\r\n        flush,\r\n        immediate: true,\r\n    });\r\n    const stop2 = watch(b, (newValue) => {\r\n        a.value = newValue;\r\n    }, {\r\n        flush,\r\n        immediate: true,\r\n    });\r\n    return () => {\r\n        stop1();\r\n        stop2();\r\n    };\r\n}\n\n/**\r\n * Explicitly define the deps of computed.\r\n *\r\n * @param source\r\n * @param fn\r\n */\r\nfunction controlledComputed(source, fn) {\r\n    let v = undefined;\r\n    let track;\r\n    let trigger;\r\n    const dirty = ref(true);\r\n    watch(source, () => {\r\n        dirty.value = true;\r\n        trigger();\r\n    }, { flush: 'sync' });\r\n    return customRef((_track, _trigger) => {\r\n        track = _track;\r\n        trigger = _trigger;\r\n        return {\r\n            get() {\r\n                if (dirty.value) {\r\n                    v = fn();\r\n                    dirty.value = false;\r\n                }\r\n                track();\r\n                return v;\r\n            },\r\n            set() { },\r\n        };\r\n    });\r\n}\n\nfunction __onlyVue3(name = 'this function') {\r\n    if (isVue3)\r\n        return;\r\n    throw new Error(`[VueUse] ${name} is only works on Vue 3.`);\r\n}\n\n// implementation\r\nfunction extendRef(ref, extend, { enumerable = false, unwrap = true } = {}) {\r\n    __onlyVue3();\r\n    for (const [key, value] of Object.entries(extend)) {\r\n        if (key === 'value')\r\n            continue;\r\n        if (isRef(value) && unwrap) {\r\n            Object.defineProperty(ref, key, {\r\n                get() {\r\n                    return value.value;\r\n                },\r\n                set(v) {\r\n                    value.value = v;\r\n                },\r\n                enumerable,\r\n            });\r\n        }\r\n        else {\r\n            Object.defineProperty(ref, key, { value, enumerable });\r\n        }\r\n    }\r\n    return ref;\r\n}\n\n/**\r\n * Explicitly define the deps of computed.\r\n *\r\n * @param source\r\n * @param fn\r\n */\r\nfunction controlledRef(initial, options = {}) {\r\n    let source = initial;\r\n    let track;\r\n    let trigger;\r\n    const ref = customRef((_track, _trigger) => {\r\n        track = _track;\r\n        trigger = _trigger;\r\n        return {\r\n            get() {\r\n                return get();\r\n            },\r\n            set(v) {\r\n                set(v);\r\n            },\r\n        };\r\n    });\r\n    function get(tracking = true) {\r\n        if (tracking)\r\n            track();\r\n        return source;\r\n    }\r\n    function set(value, triggering = true) {\r\n        var _a, _b;\r\n        if (value === source)\r\n            return;\r\n        const old = source;\r\n        if (((_a = options.onBeforeChange) === null || _a === void 0 ? void 0 : _a.call(options, value, old)) === false)\r\n            return; // dismissed\r\n        source = value;\r\n        (_b = options.onChanged) === null || _b === void 0 ? void 0 : _b.call(options, value, old);\r\n        if (triggering)\r\n            trigger();\r\n    }\r\n    /**\r\n     * Get the value without tracked in the reactivity system\r\n     */\r\n    const untrackedGet = () => get(false);\r\n    /**\r\n     * Set the value without triggering the reactivity system\r\n     */\r\n    const silentSet = (v) => set(v, false);\r\n    /**\r\n     * Get the value without tracked in the reactivity system.\r\n     *\r\n     * Alias for `untrackedGet()`\r\n     */\r\n    const peek = () => get(false);\r\n    /**\r\n     * Set the value without triggering the reactivity system\r\n     *\r\n     * Alias for `silentSet(v)`\r\n     */\r\n    const lay = (v) => set(v, false);\r\n    return extendRef(ref, {\r\n        get,\r\n        set,\r\n        untrackedGet,\r\n        silentSet,\r\n        peek,\r\n        lay,\r\n    }, { enumerable: true });\r\n}\n\n/**\r\n * The source code for this function was inspired by vue-apollo's `useEventHook` util\r\n * https://github.com/vuejs/vue-apollo/blob/v4/packages/vue-apollo-composable/src/util/useEventHook.ts\r\n */\r\n/**\r\n * Utility for creating event hooks\r\n *\r\n * @see https://vueuse.org/createEventHook\r\n */\r\nfunction createEventHook() {\r\n    const fns = [];\r\n    const off = (fn) => {\r\n        const index = fns.indexOf(fn);\r\n        if (index !== -1)\r\n            fns.splice(index, 1);\r\n    };\r\n    const on = (fn) => {\r\n        fns.push(fn);\r\n        return {\r\n            off: () => off(fn),\r\n        };\r\n    };\r\n    const trigger = (param) => {\r\n        fns.forEach(fn => fn(param));\r\n    };\r\n    return {\r\n        on,\r\n        off,\r\n        trigger,\r\n    };\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nconst isClient = typeof window !== 'undefined';\r\nconst isDef = (val) => typeof val !== 'undefined';\r\nconst assert = (condition, ...infos) => {\r\n    if (!condition)\r\n        console.warn(...infos);\r\n};\r\nconst toString = Object.prototype.toString;\r\nconst isBoolean = (val) => typeof val === 'boolean';\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isNumber = (val) => typeof val === 'number';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isObject = (val) => toString.call(val) === '[object Object]';\r\nconst isWindow = (val) => typeof window !== 'undefined' && toString.call(val) === '[object Window]';\r\nconst now = () => Date.now();\r\nconst timestamp = () => +Date.now();\r\nconst clamp = (n, min, max) => Math.min(max, Math.max(min, n));\r\nconst noop = () => { };\n\n/**\r\n * @internal\r\n */\r\nfunction createFilterWrapper(filter, fn) {\r\n    function wrapper(...args) {\r\n        filter(() => fn.apply(this, args), { fn, thisArg: this, args });\r\n    }\r\n    return wrapper;\r\n}\r\nconst bypassFilter = (invoke) => {\r\n    return invoke();\r\n};\r\n/**\r\n * Create an EventFilter that debounce the events\r\n *\r\n * @param ms\r\n */\r\nfunction debounceFilter(ms) {\r\n    let timer;\r\n    const filter = (invoke) => {\r\n        const duration = unref(ms);\r\n        if (timer)\r\n            clearTimeout(timer);\r\n        if (duration <= 0)\r\n            return invoke();\r\n        timer = setTimeout(invoke, duration);\r\n    };\r\n    return filter;\r\n}\r\n/**\r\n * Create an EventFilter that throttle the events\r\n *\r\n * @param ms\r\n * @param [trailing=true]\r\n */\r\nfunction throttleFilter(ms, trailing = true) {\r\n    let lastExec = 0;\r\n    let timer;\r\n    const clear = () => {\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n            timer = undefined;\r\n        }\r\n    };\r\n    const filter = (invoke) => {\r\n        const duration = unref(ms);\r\n        const elapsed = Date.now() - lastExec;\r\n        clear();\r\n        if (duration <= 0) {\r\n            lastExec = Date.now();\r\n            return invoke();\r\n        }\r\n        if (elapsed > duration) {\r\n            lastExec = Date.now();\r\n            invoke();\r\n        }\r\n        else if (trailing) {\r\n            timer = setTimeout(() => {\r\n                clear();\r\n                invoke();\r\n            }, duration);\r\n        }\r\n    };\r\n    return filter;\r\n}\r\n/**\r\n * EventFilter that gives extra controls to pause and resume the filter\r\n *\r\n * @param extendFilter  Extra filter to apply when the PauseableFilter is active, default to none\r\n *\r\n */\r\nfunction pausableFilter(extendFilter = bypassFilter) {\r\n    const isActive = ref(true);\r\n    function pause() {\r\n        isActive.value = false;\r\n    }\r\n    function resume() {\r\n        isActive.value = true;\r\n    }\r\n    const eventFilter = (...args) => {\r\n        if (isActive.value)\r\n            extendFilter(...args);\r\n    };\r\n    return { isActive, pause, resume, eventFilter };\r\n}\n\nfunction promiseTimeout(ms, throwOnTimeout = false, reason = 'Timeout') {\r\n    return new Promise((resolve, reject) => {\r\n        if (throwOnTimeout)\r\n            setTimeout(() => reject(reason), ms);\r\n        else\r\n            setTimeout(resolve, ms);\r\n    });\r\n}\r\n/**\r\n * Create singleton promise function\r\n *\r\n * @example\r\n * ```\r\n * const promise = createSingletonPromise(async () => { ... })\r\n *\r\n * await promise()\r\n * await promise() // all of them will be bind to a single promise instance\r\n * await promise() // and be resolved together\r\n * ```\r\n */\r\nfunction createSingletonPromise(fn) {\r\n    let _promise;\r\n    function wrapper() {\r\n        if (!_promise)\r\n            _promise = fn();\r\n        return _promise;\r\n    }\r\n    wrapper.reset = async () => {\r\n        const _prev = _promise;\r\n        _promise = undefined;\r\n        if (_prev)\r\n            await _prev;\r\n    };\r\n    return wrapper;\r\n}\r\nfunction invoke(fn) {\r\n    return fn();\r\n}\r\nfunction containsProp(obj, ...props) {\r\n    return props.some(k => k in obj);\r\n}\r\nfunction increaseWithUnit(target, delta) {\r\n    var _a;\r\n    if (typeof target === 'number')\r\n        return target + delta;\r\n    const value = ((_a = target.match(/^-?[0-9]+\\.?[0-9]*/)) === null || _a === void 0 ? void 0 : _a[0]) || '';\r\n    const unit = target.slice(value.length);\r\n    const result = (parseFloat(value) + delta);\r\n    if (Number.isNaN(result))\r\n        return target;\r\n    return result + unit;\r\n}\n\n// implementation\r\nfunction watchWithFilter(source, cb, options = {}) {\r\n    const { eventFilter = bypassFilter } = options, watchOptions = __rest(options, [\"eventFilter\"]);\r\n    return watch(source, createFilterWrapper(eventFilter, cb), watchOptions);\r\n}\n\n// implementation\r\nfunction debouncedWatch(source, cb, options = {}) {\r\n    const { debounce = 0 } = options, watchOptions = __rest(options, [\"debounce\"]);\r\n    return watchWithFilter(source, cb, Object.assign(Object.assign({}, watchOptions), { eventFilter: debounceFilter(debounce) }));\r\n}\n\nfunction get(obj, key) {\r\n    if (key == null)\r\n        return unref(obj);\r\n    return unref(obj)[key];\r\n}\n\nfunction ignorableWatch(source, cb, options = {}) {\r\n    const { eventFilter = bypassFilter } = options, watchOptions = __rest(options, [\"eventFilter\"]);\r\n    const filteredCb = createFilterWrapper(eventFilter, cb);\r\n    let ignoreUpdates;\r\n    let ignorePrevAsyncUpdates;\r\n    let stop;\r\n    if (watchOptions.flush === 'sync') {\r\n        const ignore = ref(false);\r\n        // no op for flush: sync\r\n        ignorePrevAsyncUpdates = () => { };\r\n        ignoreUpdates = (updater) => {\r\n            // Call the updater function and count how many sync updates are performed,\r\n            // then add them to the ignore count\r\n            ignore.value = true;\r\n            updater();\r\n            ignore.value = false;\r\n        };\r\n        stop = watch(source, (...args) => {\r\n            if (!ignore.value)\r\n                filteredCb(...args);\r\n        }, watchOptions);\r\n    }\r\n    else {\r\n        // flush 'pre' and 'post'\r\n        const disposables = [];\r\n        // counters for how many following changes to be ignored\r\n        // ignoreCounter is incremented before there is a history operation\r\n        // affecting the source ref value (undo, redo, revert).\r\n        // syncCounter is incremented in sync with every change to the\r\n        // source ref value. This let us know how many times the ref\r\n        // was modified and support chained sync operations. If there\r\n        // are more sync triggers than the ignore count, the we now\r\n        // there are modifications in the source ref value that we\r\n        // need to commit\r\n        const ignoreCounter = ref(0);\r\n        const syncCounter = ref(0);\r\n        ignorePrevAsyncUpdates = () => {\r\n            ignoreCounter.value = syncCounter.value;\r\n        };\r\n        // Sync watch to count modifications to the source\r\n        disposables.push(watch(source, () => {\r\n            syncCounter.value++;\r\n        }, Object.assign(Object.assign({}, watchOptions), { flush: 'sync' })));\r\n        ignoreUpdates = (updater) => {\r\n            // Call the updater function and count how many sync updates are performed,\r\n            // then add them to the ignore count\r\n            const syncCounterPrev = syncCounter.value;\r\n            updater();\r\n            ignoreCounter.value += syncCounter.value - syncCounterPrev;\r\n        };\r\n        disposables.push(watch(source, (...args) => {\r\n            // If a history operation was performed (ignoreCounter > 0) and there are\r\n            // no other changes to the source ref value afterwards, then ignore this commit\r\n            const ignore = ignoreCounter.value > 0 && ignoreCounter.value === syncCounter.value;\r\n            ignoreCounter.value = 0;\r\n            syncCounter.value = 0;\r\n            if (ignore)\r\n                return;\r\n            filteredCb(...args);\r\n        }, watchOptions));\r\n        stop = () => {\r\n            disposables.forEach(fn => fn());\r\n        };\r\n    }\r\n    return { stop, ignoreUpdates, ignorePrevAsyncUpdates };\r\n}\n\nfunction makeDestructurable(obj, arr) {\r\n    if (typeof Symbol !== 'undefined') {\r\n        const clone = Object.assign({}, obj);\r\n        Object.defineProperty(clone, Symbol.iterator, {\r\n            enumerable: false,\r\n            value() {\r\n                let index = 0;\r\n                return {\r\n                    next: () => ({\r\n                        value: arr[index++],\r\n                        done: index > arr.length,\r\n                    }),\r\n                };\r\n            },\r\n        });\r\n        return clone;\r\n    }\r\n    else {\r\n        return Object.assign([...arr], obj);\r\n    }\r\n}\n\n/**\r\n * `NOT` conditions for refs.\r\n *\r\n * @see https://vueuse.org/not\r\n */\r\nfunction not(v) {\r\n    return computed(() => !unref(v));\r\n}\n\n/**\r\n * `OR` conditions for refs.\r\n *\r\n * @see https://vueuse.org/or\r\n */\r\nfunction or(...args) {\r\n    return computed(() => args.some(i => unref(i)));\r\n}\n\n// implementation\r\nfunction pausableWatch(source, cb, options = {}) {\r\n    const { eventFilter: filter } = options, watchOptions = __rest(options, [\"eventFilter\"]);\r\n    const { eventFilter, pause, resume, isActive } = pausableFilter(filter);\r\n    const stop = watchWithFilter(source, cb, Object.assign(Object.assign({}, watchOptions), { eventFilter }));\r\n    return { stop, pause, resume, isActive };\r\n}\n\n/**\r\n * Converts plain function into a reactive function.\r\n * The converted function accepts refs as it's arguments\r\n * and returns a ComputedRef, with proper typing.\r\n *\r\n * @param fn - Source function\r\n */\r\nfunction reactify(fn) {\r\n    return function (...args) {\r\n        return computed(() => fn.apply(this, args.map(i => unref(i))));\r\n    };\r\n}\n\nfunction reactifyObject(obj, optionsOrKeys = {}) {\r\n    let keys = [];\r\n    if (Array.isArray(optionsOrKeys)) {\r\n        keys = optionsOrKeys;\r\n    }\r\n    else {\r\n        const { includeOwnProperties = true } = optionsOrKeys;\r\n        keys.push(...Object.keys(obj));\r\n        if (includeOwnProperties)\r\n            keys.push(...Object.getOwnPropertyNames(obj));\r\n    }\r\n    return Object.fromEntries(keys\r\n        .map((key) => {\r\n        const value = obj[key];\r\n        return [\r\n            key,\r\n            typeof value === 'function'\r\n                ? reactify(value.bind(obj))\r\n                : value,\r\n        ];\r\n    }));\r\n}\n\n/**\r\n * Reactively pick fields from a reactive object\r\n *\r\n * @see https://vueuse.js.org/reactivePick\r\n */\r\nfunction reactivePick(obj, ...keys) {\r\n    return reactive(Object.fromEntries(keys.map(k => [k, toRef(obj, k)])));\r\n}\n\n/**\r\n *  Shorthand for `ref.value = x`\r\n */\r\nfunction set(...args) {\r\n    if (args.length === 2) {\r\n        const [ref, value] = args;\r\n        ref.value = value;\r\n    }\r\n    if (args.length === 3) {\r\n        if (isVue2) {\r\n            // use @vue/composition-api's set API\r\n            require('vue-demi').set(...args);\r\n        }\r\n        else {\r\n            const [target, key, value] = args;\r\n            target[key] = value;\r\n        }\r\n    }\r\n}\n\n/**\r\n * Keep target ref(s) in sync with the source ref\r\n *\r\n * @param source source ref\r\n * @param targets\r\n */\r\nfunction syncRef(source, targets, { flush = 'sync', deep = false, immediate = true, } = {}) {\r\n    if (!Array.isArray(targets))\r\n        targets = [targets];\r\n    return watch(source, (newValue) => {\r\n        targets.forEach(target => target.value = newValue);\r\n    }, {\r\n        flush,\r\n        deep,\r\n        immediate,\r\n    });\r\n}\n\n// implementation\r\nfunction throttledWatch(source, cb, options = {}) {\r\n    const { throttle = 0 } = options, watchOptions = __rest(options, [\"throttle\"]);\r\n    return watchWithFilter(source, cb, Object.assign(Object.assign({}, watchOptions), { eventFilter: throttleFilter(throttle) }));\r\n}\n\n/**\r\n * Call onMounted() if it's inside a component lifecycle, if not, run just call the function\r\n *\r\n * @param fn\r\n * @param sync if set to false, it will run in the nextTick() of Vue\r\n */\r\nfunction tryOnMounted(fn, sync = true) {\r\n    if (getCurrentInstance())\r\n        onMounted(fn);\r\n    else if (sync)\r\n        fn();\r\n    else\r\n        nextTick(fn);\r\n}\n\n/**\r\n * Call onUnmounted() if it's inside a component lifecycle, if not, do nothing\r\n *\r\n * @param fn\r\n */\r\nfunction tryOnUnmounted(fn) {\r\n    if (getCurrentInstance())\r\n        onUnmounted(fn);\r\n}\n\nfunction until(r) {\r\n    let isNot = false;\r\n    function toMatch(condition, { flush = 'sync', deep = false, timeout, throwOnTimeout } = {}) {\r\n        let stop = null;\r\n        const watcher = new Promise((resolve) => {\r\n            stop = watch(r, (v) => {\r\n                if (condition(v) === !isNot) {\r\n                    stop === null || stop === void 0 ? void 0 : stop();\r\n                    resolve();\r\n                }\r\n            }, {\r\n                flush,\r\n                deep,\r\n                immediate: true,\r\n            });\r\n        });\r\n        const promises = [watcher];\r\n        if (timeout) {\r\n            promises.push(promiseTimeout(timeout, throwOnTimeout).finally(() => {\r\n                stop === null || stop === void 0 ? void 0 : stop();\r\n            }));\r\n        }\r\n        return Promise.race(promises);\r\n    }\r\n    function toBe(value, options) {\r\n        return toMatch(v => v === unref(value), options);\r\n    }\r\n    function toBeTruthy(options) {\r\n        return toMatch(v => Boolean(v), options);\r\n    }\r\n    function toBeNull(options) {\r\n        return toBe(null, options);\r\n    }\r\n    function toBeUndefined(options) {\r\n        return toBe(undefined, options);\r\n    }\r\n    function toBeNaN(options) {\r\n        return toMatch(Number.isNaN, options);\r\n    }\r\n    function toContains(value, options) {\r\n        return toMatch((v) => {\r\n            const array = Array.from(v);\r\n            return array.includes(value) || array.includes(unref(value));\r\n        }, options);\r\n    }\r\n    function changed(options) {\r\n        return changedTimes(1, options);\r\n    }\r\n    function changedTimes(n = 1, options) {\r\n        let count = -1; // skip the immediate check\r\n        return toMatch(() => {\r\n            count += 1;\r\n            return count >= n;\r\n        }, options);\r\n    }\r\n    if (Array.isArray(unref(r))) {\r\n        const instance = {\r\n            toMatch,\r\n            toContains,\r\n            changed,\r\n            changedTimes,\r\n            get not() {\r\n                isNot = !isNot;\r\n                return this;\r\n            },\r\n        };\r\n        return instance;\r\n    }\r\n    else {\r\n        const instance = {\r\n            toMatch,\r\n            toBe,\r\n            toBeTruthy,\r\n            toBeNull,\r\n            toBeNaN,\r\n            toBeUndefined,\r\n            changed,\r\n            changedTimes,\r\n            get not() {\r\n                isNot = !isNot;\r\n                return this;\r\n            },\r\n        };\r\n        return instance;\r\n    }\r\n}\r\n/**\r\n * @deprecated `when` is renamed to `util`, use `until` instead. This will be removed in next major version.\r\n */\r\nconst when = until;\n\n/**\r\n * Basic counter with utility functions.\r\n *\r\n * @see https://vueuse.org/useCounter\r\n * @param [initialValue=0]\r\n */\r\nfunction useCounter(initialValue = 0) {\r\n    const count = ref(initialValue);\r\n    const inc = (delta = 1) => (count.value += delta);\r\n    const dec = (delta = 1) => (count.value -= delta);\r\n    const get = () => count.value;\r\n    const set = (val) => (count.value = val);\r\n    const reset = (val = initialValue) => {\r\n        initialValue = val;\r\n        return set(val);\r\n    };\r\n    return { count, inc, dec, get, set, reset };\r\n}\n\n/**\r\n * Debounce execution of a function.\r\n *\r\n * @param  fn          A function to be executed after delay milliseconds debounced.\r\n * @param  ms          A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\r\n *\r\n * @return A new, debounce, function.\r\n */\r\nfunction useDebounceFn(fn, ms = 200) {\r\n    return createFilterWrapper(debounceFilter(ms), fn);\r\n}\n\nfunction useDebounce(value, ms = 200) {\r\n    if (ms <= 0)\r\n        return value;\r\n    const debounced = ref(value.value);\r\n    const updater = useDebounceFn(() => {\r\n        debounced.value = value.value;\r\n    }, ms);\r\n    watch(value, () => updater());\r\n    return debounced;\r\n}\n\n/**\r\n * Wrapper for `setInterval` with controls\r\n *\r\n * @param cb\r\n * @param interval\r\n * @param immediate\r\n */\r\nfunction useIntervalFn(cb, interval = 1000, immediate = true) {\r\n    let timer = null;\r\n    const isActive = ref(false);\r\n    function clean() {\r\n        if (timer) {\r\n            clearInterval(timer);\r\n            timer = null;\r\n        }\r\n    }\r\n    function pause() {\r\n        isActive.value = false;\r\n        clean();\r\n    }\r\n    function resume() {\r\n        if (interval <= 0)\r\n            return;\r\n        isActive.value = true;\r\n        clean();\r\n        timer = setInterval(cb, interval);\r\n    }\r\n    if (immediate && isClient)\r\n        resume();\r\n    tryOnUnmounted(pause);\r\n    return {\r\n        isActive,\r\n        pause,\r\n        resume,\r\n        start: resume,\r\n        stop: pause,\r\n    };\r\n}\n\nfunction useInterval(interval = 1000, immediate = true) {\r\n    const counter = ref(0);\r\n    return Object.assign({ counter }, useIntervalFn(() => counter.value += 1, interval, immediate));\r\n}\n\nfunction useLastChanged(source, options = {}) {\r\n    var _a;\r\n    const ms = ref((_a = options.initialValue) !== null && _a !== void 0 ? _a : null);\r\n    watch(source, () => ms.value = timestamp(), options);\r\n    return ms;\r\n}\n\n/**\r\n * Throttle execution of a function. Especially useful for rate limiting\r\n * execution of handlers on events like resize and scroll.\r\n *\r\n * @param   fn             A function to be executed after delay milliseconds. The `this` context and all arguments are passed through, as-is,\r\n *                                    to `callback` when the throttled-function is executed.\r\n * @param   ms             A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\r\n *\r\n * @return  A new, throttled, function.\r\n */\r\nfunction useThrottleFn(fn, ms = 200, trailing = true) {\r\n    return createFilterWrapper(throttleFilter(ms, trailing), fn);\r\n}\n\n/**\r\n * Throttle execution of a function. Especially useful for rate limiting\r\n * execution of handlers on events like resize and scroll.\r\n *\r\n * @param  delay  A zero-or-greater delay in milliseconds. For event callbacks, values around 100 or 250 (or even higher) are most useful.\r\n */\r\nfunction useThrottle(value, delay = 200) {\r\n    if (delay <= 0)\r\n        return value;\r\n    const throttled = ref(value.value);\r\n    const updater = useThrottleFn(() => {\r\n        throttled.value = value.value;\r\n    }, delay);\r\n    watch(value, () => updater());\r\n    return throttled;\r\n}\n\n/**\r\n * Wrapper for `setTimeout` with controls.\r\n *\r\n * @param cb\r\n * @param interval\r\n * @param immediate\r\n */\r\nfunction useTimeoutFn(cb, interval, immediate = true) {\r\n    const isPending = ref(false);\r\n    let timer = null;\r\n    function clear() {\r\n        if (timer) {\r\n            clearTimeout(timer);\r\n            timer = null;\r\n        }\r\n    }\r\n    function stop() {\r\n        isPending.value = false;\r\n        clear();\r\n    }\r\n    function start(...args) {\r\n        clear();\r\n        isPending.value = true;\r\n        timer = setTimeout(() => {\r\n            isPending.value = false;\r\n            timer = null;\r\n            // eslint-disable-next-line node/no-callback-literal\r\n            cb(...args);\r\n        }, interval);\r\n    }\r\n    if (immediate) {\r\n        isPending.value = true;\r\n        if (isClient)\r\n            start();\r\n    }\r\n    tryOnUnmounted(stop);\r\n    return {\r\n        isPending,\r\n        start,\r\n        stop,\r\n        isActive: isPending,\r\n    };\r\n}\n\n/**\r\n * Update value after a given time with controls.\r\n *\r\n * @param interval\r\n * @param immediate\r\n */\r\nfunction useTimeout(interval = 1000, immediate = true) {\r\n    const ready = ref(false);\r\n    const controls = useTimeoutFn(() => ready.value = true, interval, immediate);\r\n    function stop() {\r\n        ready.value = false;\r\n        controls.stop();\r\n    }\r\n    function start() {\r\n        ready.value = false;\r\n        controls.start();\r\n    }\r\n    return {\r\n        ready,\r\n        isActive: controls.isActive,\r\n        start,\r\n        stop,\r\n    };\r\n}\n\nfunction useToggle(initialValue = false) {\r\n    if (isRef(initialValue)) {\r\n        return () => (initialValue.value = !initialValue.value);\r\n    }\r\n    else {\r\n        const boolean = ref(initialValue);\r\n        const toggle = () => (boolean.value = !boolean.value);\r\n        return [boolean, toggle];\r\n    }\r\n}\n\n/**\r\n * Shorthand for watching value to be truthy\r\n *\r\n * @see https://vueuse.js.org/whenever\r\n */\r\nfunction whenever(source, cb, options) {\r\n    return watch(source, (v) => { if (v)\r\n        cb(); }, options);\r\n}\n\nexport { and, assert, biSyncRef, bypassFilter, clamp, containsProp, controlledComputed, controlledRef, createEventHook, createFilterWrapper, createSingletonPromise, debounceFilter, debouncedWatch, extendRef, get, ignorableWatch, increaseWithUnit, invoke, isBoolean, isClient, isDef, isFunction, isNumber, isObject, isString, isWindow, makeDestructurable, noop, not, now, or, pausableFilter, pausableWatch, promiseTimeout, reactify, reactifyObject, reactivePick, set, syncRef, throttleFilter, throttledWatch, timestamp, tryOnMounted, tryOnUnmounted, until, useCounter, useDebounce, useDebounceFn, useInterval, useIntervalFn, useLastChanged, useThrottle, useThrottleFn, useTimeout, useTimeoutFn, useToggle, watchWithFilter, when, whenever };\n","import { isRef, ref, watchEffect, computed, customRef, unref, createApp, reactive, watch, getCurrentInstance, onMounted, onUpdated, toRefs as toRefs$1, shallowRef, markRaw, readonly, isVue2 } from 'vue-demi';\nimport { isClient, isString, noop, tryOnUnmounted, promiseTimeout, increaseWithUnit, useTimeoutFn, watchWithFilter, tryOnMounted, createFilterWrapper, bypassFilter, createSingletonPromise, containsProp, createEventHook, throttleFilter, timestamp, isFunction, isObject, ignorableWatch, isNumber, useIntervalFn, pausableFilter, clamp, pausableWatch } from '@vueuse/shared';\nexport * from '@vueuse/shared';\n\n/**\r\n * Create an asynchronous computed dependency.\r\n *\r\n * @see https://vueuse.org/asyncComputed\r\n * @param evaluationCallback     The promise-returning callback which generates the computed value\r\n * @param initialState           The initial state, used until the first evaluation finishes\r\n * @param optionsOrRef           Additional options or a ref passed to receive the updates of the async evaluation\r\n */\r\nfunction asyncComputed(evaluationCallback, initialState, optionsOrRef) {\r\n    let options;\r\n    if (isRef(optionsOrRef)) {\r\n        options = {\r\n            evaluating: optionsOrRef,\r\n        };\r\n    }\r\n    else {\r\n        options = optionsOrRef || {};\r\n    }\r\n    const { lazy = false, evaluating = undefined, } = options;\r\n    const started = ref(!lazy);\r\n    const current = ref(initialState);\r\n    let counter = 0;\r\n    watchEffect(async (onInvalidate) => {\r\n        if (!started.value)\r\n            return;\r\n        counter++;\r\n        const counterAtBeginning = counter;\r\n        let hasFinished = false;\r\n        try {\r\n            // Defer initial setting of `evaluating` ref\r\n            // to avoid having it as a dependency\r\n            if (evaluating) {\r\n                Promise.resolve().then(() => {\r\n                    evaluating.value = true;\r\n                });\r\n            }\r\n            const result = await evaluationCallback((cancelCallback) => {\r\n                onInvalidate(() => {\r\n                    if (evaluating)\r\n                        evaluating.value = false;\r\n                    if (!hasFinished)\r\n                        cancelCallback();\r\n                });\r\n            });\r\n            if (counterAtBeginning === counter)\r\n                current.value = result;\r\n        }\r\n        finally {\r\n            if (evaluating)\r\n                evaluating.value = false;\r\n            hasFinished = true;\r\n        }\r\n    });\r\n    if (lazy) {\r\n        return computed(() => {\r\n            started.value = true;\r\n            return current.value;\r\n        });\r\n    }\r\n    else {\r\n        return current;\r\n    }\r\n}\n\n/**\r\n * Create a ref which will be reset to the default value after some time.\r\n *\r\n * @see https://vueuse.org/autoResetRef\r\n * @param defaultValue The value which will be set.\r\n * @param afterMs      A zero-or-greater delay in milliseconds.\r\n */\r\nfunction autoResetRef(defaultValue, afterMs = 10000) {\r\n    return customRef((track, trigger) => {\r\n        let value = defaultValue;\r\n        let timer;\r\n        const resetAfter = () => setTimeout(() => {\r\n            value = defaultValue;\r\n            trigger();\r\n        }, unref(afterMs));\r\n        return {\r\n            get() {\r\n                track();\r\n                return value;\r\n            },\r\n            set(newValue) {\r\n                value = newValue;\r\n                trigger();\r\n                clearTimeout(timer);\r\n                timer = resetAfter();\r\n            },\r\n        };\r\n    });\r\n}\n\nconst defaultWindow = /* #__PURE__ */ isClient ? window : undefined;\r\nconst defaultDocument = /* #__PURE__ */ isClient ? window.document : undefined;\r\nconst defaultNavigator = /* #__PURE__ */ isClient ? window.navigator : undefined;\n\nfunction withScope(factory) {\r\n    let state = null;\r\n    const document = defaultDocument;\r\n    if (document) {\r\n        const container = document.createElement('div');\r\n        createApp({\r\n            setup() {\r\n                state = reactive(factory());\r\n            },\r\n            render: () => null,\r\n        }).mount(container);\r\n    }\r\n    else {\r\n        state = reactive(factory());\r\n    }\r\n    return state;\r\n}\r\n/**\r\n * Keep states in the global scope to be reusable across Vue instances.\r\n *\r\n * @see https://vueuse.org/createGlobalState\r\n * @param stateFactory A factory function to create the state\r\n */\r\nfunction createGlobalState(stateFactory) {\r\n    let state;\r\n    return () => {\r\n        if (state == null)\r\n            state = withScope(stateFactory);\r\n        return state;\r\n    };\r\n}\n\n/**\r\n * Get the dom element of a ref of element or Vue component instance\r\n *\r\n * @param elRef\r\n */\r\nfunction unrefElement(elRef) {\r\n    var _a, _b;\r\n    const plain = unref(elRef);\r\n    return (_b = (_a = plain) === null || _a === void 0 ? void 0 : _a.$el) !== null && _b !== void 0 ? _b : plain;\r\n}\n\nfunction useEventListener(...args) {\r\n    let target;\r\n    let event;\r\n    let listener;\r\n    let options;\r\n    if (isString(args[0])) {\r\n        [event, listener, options] = args;\r\n        target = defaultWindow;\r\n    }\r\n    else {\r\n        [target, event, listener, options] = args;\r\n    }\r\n    if (!target)\r\n        return noop;\r\n    let cleanup = noop;\r\n    const stopWatch = watch(() => unref(target), (el) => {\r\n        cleanup();\r\n        if (!el)\r\n            return;\r\n        el.addEventListener(event, listener, options);\r\n        cleanup = () => {\r\n            el.removeEventListener(event, listener, options);\r\n            cleanup = noop;\r\n        };\r\n    }, { immediate: true, flush: 'post' });\r\n    const stop = () => {\r\n        stopWatch();\r\n        cleanup();\r\n    };\r\n    tryOnUnmounted(stop);\r\n    return stop;\r\n}\n\n/**\r\n * Listen for clicks outside of an element.\r\n *\r\n * @see https://vueuse.org/onClickOutside\r\n * @param target\r\n * @param handler\r\n * @param options\r\n */\r\nfunction onClickOutside(target, handler, options = {}) {\r\n    const { window = defaultWindow, event = 'pointerdown' } = options;\r\n    if (!window)\r\n        return;\r\n    const listener = (event) => {\r\n        const el = unrefElement(target);\r\n        if (!el)\r\n            return;\r\n        if (el === event.target || event.composedPath().includes(el))\r\n            return;\r\n        handler(event);\r\n    };\r\n    return useEventListener(window, event, listener, { passive: true });\r\n}\n\nconst createKeyPredicate = (keyFilter) => typeof keyFilter === 'function'\r\n    ? keyFilter\r\n    : typeof keyFilter === 'string'\r\n        ? (event) => event.key === keyFilter\r\n        : keyFilter\r\n            ? () => true\r\n            : () => false;\r\n/**\r\n * Listen for keyboard keys being stroked.\r\n *\r\n * @see https://vueuse.org/onKeyStroke\r\n * @param key\r\n * @param handler\r\n * @param options\r\n */\r\nfunction onKeyStroke(key, handler, options = {}) {\r\n    const { target = defaultWindow, eventName = 'keydown', passive = false } = options;\r\n    const predicate = createKeyPredicate(key);\r\n    const listener = (e) => {\r\n        if (predicate(e))\r\n            handler(e);\r\n    };\r\n    return useEventListener(target, eventName, listener, passive);\r\n}\r\n/**\r\n * Listen to the keydown event of the given key.\r\n *\r\n * @see https://vueuse.org/onKeyStroke\r\n * @param key\r\n * @param handler\r\n * @param options\r\n */\r\nfunction onKeyDown(key, handler, options = {}) {\r\n    return onKeyStroke(key, handler, Object.assign(Object.assign({}, options), { eventName: 'keydown' }));\r\n}\r\n/**\r\n * Listen to the keypress event of the given key.\r\n *\r\n * @see https://vueuse.org/onKeyStroke\r\n * @param key\r\n * @param handler\r\n * @param options\r\n */\r\nfunction onKeyPressed(key, handler, options = {}) {\r\n    return onKeyStroke(key, handler, Object.assign(Object.assign({}, options), { eventName: 'keypress' }));\r\n}\r\n/**\r\n * Listen to the keyup event of the given key.\r\n *\r\n * @see https://vueuse.org/onKeyStroke\r\n * @param key\r\n * @param handler\r\n * @param options\r\n */\r\nfunction onKeyUp(key, handler, options = {}) {\r\n    return onKeyStroke(key, handler, Object.assign(Object.assign({}, options), { eventName: 'keyup' }));\r\n}\n\n/* this implementation is original ported from https://github.com/streamich/react-use by Vadim Dalecky */\r\nconst isFocusedElementEditable = () => {\r\n    const { activeElement, body } = document;\r\n    if (!activeElement)\r\n        return false;\r\n    // If not element has focus, we assume it is not editable, too.\r\n    if (activeElement === body)\r\n        return false;\r\n    // Assume <input> and <textarea> elements are editable.\r\n    switch (activeElement.tagName) {\r\n        case 'INPUT':\r\n        case 'TEXTAREA':\r\n            return true;\r\n    }\r\n    // Check if any other focused element id editable.\r\n    return activeElement.hasAttribute('contenteditable');\r\n};\r\nconst isTypedCharValid = ({ keyCode, metaKey, ctrlKey, altKey, }) => {\r\n    if (metaKey || ctrlKey || altKey)\r\n        return false;\r\n    // 0...9\r\n    if ((keyCode >= 48 && keyCode <= 57) || (keyCode >= 96 && keyCode <= 105))\r\n        return true;\r\n    // a...z\r\n    if (keyCode >= 65 && keyCode <= 90)\r\n        return true;\r\n    // All other keys.\r\n    return false;\r\n};\r\n/**\r\n * Fires when users start typing on non-editable elements.\r\n *\r\n * @see https://vueuse.org/onStartTyping\r\n * @param callback\r\n * @param options\r\n */\r\nfunction onStartTyping(callback, options = {}) {\r\n    const { document = defaultDocument } = options;\r\n    const keydown = (event) => {\r\n        !isFocusedElementEditable()\r\n            && isTypedCharValid(event)\r\n            && callback(event);\r\n    };\r\n    if (document)\r\n        useEventListener(document, 'keydown', keydown, { passive: true });\r\n}\n\n/**\r\n * Shorthand for binding ref to template element.\r\n *\r\n * @see https://vueuse.org/templateRef\r\n * @param key\r\n * @param initialValue\r\n */\r\nfunction templateRef(key, initialValue = null) {\r\n    const instance = getCurrentInstance();\r\n    let _trigger = () => { };\r\n    const element = customRef((track, trigger) => {\r\n        _trigger = trigger;\r\n        return {\r\n            get() {\r\n                var _a, _b;\r\n                track();\r\n                return (_b = (_a = instance === null || instance === void 0 ? void 0 : instance.proxy) === null || _a === void 0 ? void 0 : _a.$refs[key]) !== null && _b !== void 0 ? _b : initialValue;\r\n            },\r\n            set() { },\r\n        };\r\n    });\r\n    onMounted(_trigger);\r\n    onUpdated(_trigger);\r\n    return element;\r\n}\n\n/**\r\n * Extended `toRefs` that also accepts refs of an object.\r\n *\r\n * @see https://vueuse.org/toRefs\r\n * @param objectRef A ref or normal object or array.\r\n */\r\nfunction toRefs(objectRef) {\r\n    if (!isRef(objectRef))\r\n        return toRefs$1(objectRef);\r\n    const ret = Array.isArray(objectRef.value)\r\n        ? new Array(objectRef.value.length)\r\n        : {};\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const key in objectRef.value) {\r\n        ret[key] = computed({\r\n            get() {\r\n                return objectRef.value[key];\r\n            },\r\n            set(v) {\r\n                objectRef.value[key] = v;\r\n            },\r\n        });\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Reactive `document.activeElement`\r\n *\r\n * @see https://vueuse.org/useActiveElement\r\n * @param options\r\n */\r\nfunction useActiveElement(options = {}) {\r\n    const { window = defaultWindow } = options;\r\n    const counter = ref(0);\r\n    if (window) {\r\n        useEventListener(window, 'blur', () => counter.value += 1, true);\r\n        useEventListener(window, 'focus', () => counter.value += 1, true);\r\n    }\r\n    return computed(() => {\r\n        // eslint-disable-next-line no-unused-expressions\r\n        counter.value;\r\n        return window === null || window === void 0 ? void 0 : window.document.activeElement;\r\n    });\r\n}\n\n/**\r\n * Reactive async state. Will not block your setup function and will triggers changes once\r\n * the promise is ready.\r\n *\r\n * @see https://vueuse.org/useAsyncState\r\n * @param promise         The promise / async function to be resolved\r\n * @param initialState    The initial state, used until the first evaluation finishes\r\n * @param options\r\n */\r\nfunction useAsyncState(promise, initialState, options = {}) {\r\n    const { immediate = true, delay = 0, onError = noop, resetOnExecute = true, } = options;\r\n    const state = shallowRef(initialState);\r\n    const isReady = ref(false);\r\n    const error = ref(undefined);\r\n    async function execute(delay = 0) {\r\n        if (resetOnExecute)\r\n            state.value = initialState;\r\n        error.value = undefined;\r\n        isReady.value = false;\r\n        if (delay > 0)\r\n            await promiseTimeout(delay);\r\n        const _promise = typeof promise === 'function'\r\n            ? promise()\r\n            : promise;\r\n        try {\r\n            const data = await _promise;\r\n            // @ts-ignore\r\n            state.value = data;\r\n            isReady.value = true;\r\n        }\r\n        catch (e) {\r\n            error.value = e;\r\n            onError(e);\r\n        }\r\n    }\r\n    if (immediate)\r\n        execute(delay);\r\n    return {\r\n        state,\r\n        isReady,\r\n        /** @deprecated, use isReady instead */\r\n        ready: isReady,\r\n        error,\r\n        execute,\r\n    };\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive Battery Status API.\r\n *\r\n * @see https://vueuse.org/useBattery\r\n * @param options\r\n */\r\nfunction useBattery({ navigator = defaultNavigator } = {}) {\r\n    const events = ['chargingchange', 'chargingtimechange', 'dischargingtimechange', 'levelchange'];\r\n    const isSupported = navigator && 'getBattery' in navigator;\r\n    const charging = ref(false);\r\n    const chargingTime = ref(0);\r\n    const dischargingTime = ref(0);\r\n    const level = ref(1);\r\n    let battery;\r\n    function updateBatteryInfo() {\r\n        charging.value = this.charging;\r\n        chargingTime.value = this.chargingTime || 0;\r\n        dischargingTime.value = this.dischargingTime || 0;\r\n        level.value = this.level;\r\n    }\r\n    if (isSupported) {\r\n        navigator\r\n            .getBattery()\r\n            .then((_battery) => {\r\n            battery = _battery;\r\n            updateBatteryInfo.call(battery);\r\n            for (const event of events)\r\n                useEventListener(battery, event, updateBatteryInfo, { passive: true });\r\n        });\r\n    }\r\n    return {\r\n        isSupported,\r\n        charging,\r\n        chargingTime,\r\n        dischargingTime,\r\n        level,\r\n    };\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive Media Query.\r\n *\r\n * @see https://vueuse.org/useMediaQuery\r\n * @param query\r\n * @param options\r\n */\r\nfunction useMediaQuery(query, options = {}) {\r\n    const { window = defaultWindow } = options;\r\n    if (!window)\r\n        return ref(false);\r\n    const mediaQuery = window.matchMedia(query);\r\n    const matches = ref(mediaQuery.matches);\r\n    const handler = (event) => {\r\n        matches.value = event.matches;\r\n    };\r\n    if ('addEventListener' in mediaQuery) {\r\n        mediaQuery.addEventListener('change', handler);\r\n    }\r\n    else {\r\n        // @ts-expect-error - fallback for Safari < 14 and older browsers\r\n        mediaQuery.addListener(handler);\r\n    }\r\n    tryOnUnmounted(() => {\r\n        if ('removeEventListener' in mediaQuery) {\r\n            mediaQuery.removeEventListener('change', handler);\r\n        }\r\n        else {\r\n            // @ts-expect-error - fallback for Safari < 14 and older browsers\r\n            mediaQuery.removeListener(handler);\r\n        }\r\n    });\r\n    return matches;\r\n}\n\n/**\r\n * Breakpoints from Tailwind V2\r\n *\r\n * @see https://tailwindcss.com/docs/breakpoints\r\n */\r\nconst breakpointsTailwind = {\r\n    'sm': 640,\r\n    'md': 768,\r\n    'lg': 1024,\r\n    'xl': 1280,\r\n    '2xl': 1536,\r\n};\r\n/**\r\n * Breakpoints from Bootstrap V5\r\n *\r\n * @see https://getbootstrap.com/docs/5.0/layout/breakpoints\r\n */\r\nconst breakpointsBootstrapV5 = {\r\n    sm: 576,\r\n    md: 768,\r\n    lg: 992,\r\n    xl: 1200,\r\n    xxl: 1400,\r\n};\r\n/**\r\n * Breakpoints from Vuetify V2\r\n *\r\n * @see https://vuetifyjs.com/en/features/breakpoints\r\n */\r\nconst breakpointsVuetify = {\r\n    xs: 600,\r\n    sm: 960,\r\n    md: 1264,\r\n    lg: 1904,\r\n};\r\n/**\r\n * Breakpoints from Ant Design\r\n *\r\n * @see https://ant.design/components/layout/#breakpoint-width\r\n */\r\nconst breakpointsAntDesign = {\r\n    xs: 480,\r\n    sm: 576,\r\n    md: 768,\r\n    lg: 992,\r\n    xl: 1200,\r\n    xxl: 1600,\r\n};\r\n/**\r\n * Sematic Breakpoints\r\n */\r\nconst breakpointsSematic = {\r\n    mobileS: 320,\r\n    mobileM: 375,\r\n    mobileL: 425,\r\n    tablet: 768,\r\n    laptop: 1024,\r\n    laptopL: 1440,\r\n    desktop4K: 2560,\r\n};\n\n/**\r\n * Reactively viewport breakpoints\r\n *\r\n * @see https://vueuse.org/useBreakpoints\r\n * @param options\r\n */\r\nfunction useBreakpoints(breakpoints, options = {}) {\r\n    function getValue(k, delta) {\r\n        let v = breakpoints[k];\r\n        if (delta != null)\r\n            v = increaseWithUnit(v, delta);\r\n        if (typeof v === 'number')\r\n            v = `${v}px`;\r\n        return v;\r\n    }\r\n    const { window = defaultWindow } = options;\r\n    function match(query) {\r\n        if (!window)\r\n            return false;\r\n        return window.matchMedia(query).matches;\r\n    }\r\n    return {\r\n        greater(k) {\r\n            return useMediaQuery(`(min-width: ${getValue(k)})`, options);\r\n        },\r\n        smaller(k) {\r\n            return useMediaQuery(`(max-width: ${getValue(k, -0.1)})`, options);\r\n        },\r\n        between(a, b) {\r\n            return useMediaQuery(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`, options);\r\n        },\r\n        isGreater(k) {\r\n            return match(`(min-width: ${getValue(k)})`);\r\n        },\r\n        isSmaller(k) {\r\n            return match(`(max-width: ${getValue(k, -0.1)})`);\r\n        },\r\n        isInBetween(a, b) {\r\n            return match(`(min-width: ${getValue(a)}) and (max-width: ${getValue(b, -0.1)})`);\r\n        },\r\n    };\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive browser location.\r\n *\r\n * @see https://vueuse.org/useBrowserLocation\r\n * @param options\r\n */\r\nfunction useBrowserLocation({ window = defaultWindow } = {}) {\r\n    const buildState = (trigger) => {\r\n        const { state, length } = (window === null || window === void 0 ? void 0 : window.history) || {};\r\n        const { hash, host, hostname, href, origin, pathname, port, protocol, search } = (window === null || window === void 0 ? void 0 : window.location) || {};\r\n        return {\r\n            trigger,\r\n            state,\r\n            length,\r\n            hash,\r\n            host,\r\n            hostname,\r\n            href,\r\n            origin,\r\n            pathname,\r\n            port,\r\n            protocol,\r\n            search,\r\n        };\r\n    };\r\n    const state = ref(buildState('load'));\r\n    if (window) {\r\n        useEventListener(window, 'popstate', () => state.value = buildState('popstate'), { passive: true });\r\n        useEventListener(window, 'hashchange', () => state.value = buildState('hashchange'), { passive: true });\r\n    }\r\n    return state;\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\nfunction useClipboard(options = {}) {\r\n    const { navigator = defaultNavigator, read = true, source, copiedDuring = 1500, } = options;\r\n    const events = ['copy', 'cut'];\r\n    const isSupported = Boolean(navigator && 'clipboard' in navigator);\r\n    const text = ref('');\r\n    const copied = ref(false);\r\n    const timeout = useTimeoutFn(() => copied.value = false, copiedDuring);\r\n    function updateText() {\r\n        // @ts-expect-error untyped API\r\n        navigator.clipboard.readText().then((value) => {\r\n            text.value = value;\r\n        });\r\n    }\r\n    if (isSupported && read) {\r\n        for (const event of events)\r\n            useEventListener(event, updateText);\r\n    }\r\n    async function copy(value = unref(source)) {\r\n        if (isSupported && value != null) {\r\n            // @ts-expect-error untyped API\r\n            await navigator.clipboard.writeText(value);\r\n            text.value = value;\r\n            copied.value = true;\r\n            timeout.start();\r\n        }\r\n    }\r\n    return {\r\n        isSupported,\r\n        text: text,\r\n        copied: copied,\r\n        copy,\r\n    };\r\n}\n\n/**\r\n * Manipulate CSS variables.\r\n *\r\n * @see https://vueuse.org/useCssVar\r\n * @param prop\r\n * @param el\r\n * @param options\r\n */\r\nfunction useCssVar(prop, target, { window = defaultWindow } = {}) {\r\n    const variable = ref('');\r\n    const elRef = computed(() => { var _a; return unrefElement(target) || ((_a = window === null || window === void 0 ? void 0 : window.document) === null || _a === void 0 ? void 0 : _a.documentElement); });\r\n    watch(elRef, (el) => {\r\n        if (el && window)\r\n            variable.value = window.getComputedStyle(el).getPropertyValue(prop);\r\n    }, { immediate: true });\r\n    watch(variable, (val) => {\r\n        var _a;\r\n        if ((_a = elRef.value) === null || _a === void 0 ? void 0 : _a.style)\r\n            elRef.value.style.setProperty(prop, val);\r\n    });\r\n    return variable;\r\n}\n\nconst Serializers = {\r\n    boolean: {\r\n        read: (v) => v != null ? v === 'true' : null,\r\n        write: (v) => String(v),\r\n    },\r\n    object: {\r\n        read: (v) => v ? JSON.parse(v) : null,\r\n        write: (v) => JSON.stringify(v),\r\n    },\r\n    number: {\r\n        read: (v) => v != null ? Number.parseFloat(v) : null,\r\n        write: (v) => String(v),\r\n    },\r\n    any: {\r\n        read: (v) => v != null ? v : null,\r\n        write: (v) => String(v),\r\n    },\r\n    string: {\r\n        read: (v) => v != null ? v : null,\r\n        write: (v) => String(v),\r\n    },\r\n};\r\n/**\r\n * Reactive LocalStorage/SessionStorage.\r\n *\r\n * @see https://vueuse.org/useStorage\r\n * @param key\r\n * @param defaultValue\r\n * @param storage\r\n * @param options\r\n */\r\nfunction useStorage(key, defaultValue, storage = defaultWindow === null || defaultWindow === void 0 ? void 0 : defaultWindow.localStorage, options = {}) {\r\n    var _a;\r\n    const { flush = 'pre', deep = true, listenToStorageChanges = true, window = defaultWindow, eventFilter, } = options;\r\n    const data = ref(defaultValue);\r\n    const type = defaultValue == null\r\n        ? 'any'\r\n        : typeof defaultValue === 'boolean'\r\n            ? 'boolean'\r\n            : typeof defaultValue === 'string'\r\n                ? 'string'\r\n                : typeof defaultValue === 'object'\r\n                    ? 'object'\r\n                    : Array.isArray(defaultValue)\r\n                        ? 'object'\r\n                        : !Number.isNaN(defaultValue)\r\n                            ? 'number'\r\n                            : 'any';\r\n    const serializer = (_a = options.serializer) !== null && _a !== void 0 ? _a : Serializers[type];\r\n    function read(event) {\r\n        if (!storage)\r\n            return;\r\n        if (event && event.key !== key)\r\n            return;\r\n        try {\r\n            const rawValue = event ? event.newValue : storage.getItem(key);\r\n            if (rawValue == null) {\r\n                data.value = defaultValue;\r\n                storage.setItem(key, serializer.write(defaultValue));\r\n            }\r\n            else {\r\n                data.value = serializer.read(rawValue);\r\n            }\r\n        }\r\n        catch (e) {\r\n            console.warn(e);\r\n        }\r\n    }\r\n    read();\r\n    if (window && listenToStorageChanges)\r\n        useEventListener(window, 'storage', read);\r\n    watchWithFilter(data, () => {\r\n        if (!storage) // SSR\r\n            return;\r\n        try {\r\n            if (data.value == null)\r\n                storage.removeItem(key);\r\n            else\r\n                storage.setItem(key, serializer.write(data.value));\r\n        }\r\n        catch (e) {\r\n            console.warn(e);\r\n        }\r\n    }, {\r\n        flush,\r\n        deep,\r\n        eventFilter,\r\n    });\r\n    return data;\r\n}\n\n/**\r\n * Reactive dark theme preference.\r\n *\r\n * @see https://vueuse.org/usePreferredDark\r\n * @param [options]\r\n */\r\nfunction usePreferredDark(options) {\r\n    return useMediaQuery('(prefers-color-scheme: dark)', options);\r\n}\n\n/**\r\n * Reactive dark mode with auto data persistence.\r\n *\r\n * @see https://vueuse.org/useDark\r\n * @param options\r\n */\r\nfunction useDark(options = {}) {\r\n    const { selector = 'html', attribute = 'class', valueDark = 'dark', valueLight = '', window = defaultWindow, storage = defaultWindow === null || defaultWindow === void 0 ? void 0 : defaultWindow.localStorage, storageKey = 'vueuse-color-scheme', listenToStorageChanges = true, } = options;\r\n    const preferredDark = usePreferredDark({ window });\r\n    const store = storageKey == null\r\n        ? ref('auto')\r\n        : useStorage(storageKey, 'auto', storage, { window, listenToStorageChanges });\r\n    const isDark = computed({\r\n        get() {\r\n            return store.value === 'auto'\r\n                ? preferredDark.value\r\n                : store.value === 'dark';\r\n        },\r\n        set(v) {\r\n            if (v === preferredDark.value)\r\n                store.value = 'auto';\r\n            else\r\n                store.value = v ? 'dark' : 'light';\r\n        },\r\n    });\r\n    const onChanged = options.onChanged || ((v) => {\r\n        const el = window === null || window === void 0 ? void 0 : window.document.querySelector(selector);\r\n        if (attribute === 'class') {\r\n            el === null || el === void 0 ? void 0 : el.classList.toggle(valueDark, v);\r\n            if (valueLight)\r\n                el === null || el === void 0 ? void 0 : el.classList.toggle(valueLight, !v);\r\n        }\r\n        else {\r\n            el === null || el === void 0 ? void 0 : el.setAttribute(attribute, v ? valueDark : valueLight);\r\n        }\r\n    });\r\n    watch(isDark, onChanged, { flush: 'post' });\r\n    tryOnMounted(() => onChanged(isDark.value));\r\n    return isDark;\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive DeviceLightEvent.\r\n *\r\n * @see https://vueuse.org/useDeviceLight\r\n * @param options\r\n */\r\nfunction useDeviceLight({ window = defaultWindow } = {}) {\r\n    const light = ref(null);\r\n    if (window) {\r\n        useEventListener(window, 'devicelight', (event) => {\r\n            light.value = event.value;\r\n        });\r\n    }\r\n    return light;\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive DeviceMotionEvent.\r\n *\r\n * @see https://vueuse.org/useDeviceMotion\r\n * @param options\r\n */\r\nfunction useDeviceMotion(options = {}) {\r\n    const { window = defaultWindow, eventFilter = bypassFilter, } = options;\r\n    const acceleration = ref({ x: null, y: null, z: null });\r\n    const rotationRate = ref({ alpha: null, beta: null, gamma: null });\r\n    const interval = ref(0);\r\n    const accelerationIncludingGravity = ref({\r\n        x: null,\r\n        y: null,\r\n        z: null,\r\n    });\r\n    if (window) {\r\n        const onDeviceMotion = createFilterWrapper(eventFilter, (event) => {\r\n            acceleration.value = event.acceleration;\r\n            accelerationIncludingGravity.value = event.accelerationIncludingGravity;\r\n            rotationRate.value = event.rotationRate;\r\n            interval.value = event.interval;\r\n        });\r\n        useEventListener(window, 'devicemotion', onDeviceMotion);\r\n    }\r\n    return {\r\n        acceleration,\r\n        accelerationIncludingGravity,\r\n        rotationRate,\r\n        interval,\r\n    };\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive DeviceOrientationEvent.\r\n *\r\n * @see https://vueuse.org/useDeviceOrientation\r\n * @param options\r\n */\r\nfunction useDeviceOrientation(options = {}) {\r\n    const { window = defaultWindow } = options;\r\n    const isSupported = Boolean(window && 'DeviceOrientationEvent' in window);\r\n    const isAbsolute = ref(false);\r\n    const alpha = ref(null);\r\n    const beta = ref(null);\r\n    const gamma = ref(null);\r\n    if (window && isSupported) {\r\n        useEventListener(window, 'deviceorientation', (event) => {\r\n            isAbsolute.value = event.absolute;\r\n            alpha.value = event.alpha;\r\n            beta.value = event.beta;\r\n            gamma.value = event.gamma;\r\n        });\r\n    }\r\n    return {\r\n        isSupported,\r\n        isAbsolute,\r\n        alpha,\r\n        beta,\r\n        gamma,\r\n    };\r\n}\n\n// device pixel ratio statistics from https://www.mydevice.io/\r\nconst DEVICE_PIXEL_RATIO_SCALES = [\r\n    1,\r\n    1.325,\r\n    1.4,\r\n    1.5,\r\n    1.8,\r\n    2,\r\n    2.4,\r\n    2.5,\r\n    2.75,\r\n    3,\r\n    3.5,\r\n    4,\r\n];\r\n/**\r\n * Reactively track `window.devicePixelRatio`.\r\n *\r\n * @see https://vueuse.org/useDevicePixelRatio\r\n * @param options\r\n */\r\nfunction useDevicePixelRatio({ window = defaultWindow, } = {}) {\r\n    if (!window) {\r\n        return {\r\n            pixelRatio: ref(1),\r\n        };\r\n    }\r\n    const pixelRatio = ref(window.devicePixelRatio);\r\n    const handleDevicePixelRatio = () => {\r\n        pixelRatio.value = window.devicePixelRatio;\r\n    };\r\n    useEventListener(window, 'resize', handleDevicePixelRatio, { passive: true });\r\n    DEVICE_PIXEL_RATIO_SCALES.forEach((dppx) => {\r\n        // listen mql events in both sides\r\n        const mqlMin = useMediaQuery(`screen and (min-resolution: ${dppx}dppx)`);\r\n        const mqlMax = useMediaQuery(`screen and (max-resolution: ${dppx}dppx)`);\r\n        watch([mqlMin, mqlMax], handleDevicePixelRatio);\r\n    });\r\n    return { pixelRatio };\r\n}\n\nfunction usePermission(permissionDesc, options = {}) {\r\n    const { controls = false, navigator = defaultNavigator, } = options;\r\n    const isSupported = Boolean(navigator && 'permissions' in navigator);\r\n    let permissionStatus;\r\n    const desc = typeof permissionDesc === 'string'\r\n        ? { name: permissionDesc }\r\n        : permissionDesc;\r\n    const state = ref();\r\n    const onChange = () => {\r\n        if (permissionStatus)\r\n            state.value = permissionStatus.state;\r\n    };\r\n    const query = createSingletonPromise(async () => {\r\n        if (!isSupported)\r\n            return;\r\n        if (!permissionStatus) {\r\n            try {\r\n                permissionStatus = await navigator.permissions.query(desc);\r\n                useEventListener(permissionStatus, 'change', onChange);\r\n                onChange();\r\n            }\r\n            catch (_a) {\r\n                state.value = 'prompt';\r\n            }\r\n        }\r\n        return permissionStatus;\r\n    });\r\n    query();\r\n    if (controls) {\r\n        return {\r\n            state: state,\r\n            isSupported,\r\n            query,\r\n        };\r\n    }\r\n    else {\r\n        return state;\r\n    }\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive `enumerateDevices` listing avaliable input/output devices\r\n *\r\n * @see https://vueuse.org/useDevicesList\r\n * @param options\r\n */\r\nfunction useDevicesList(options = {}) {\r\n    const { navigator = defaultNavigator, requestPermissions = false, onUpdated, } = options;\r\n    const devices = ref([]);\r\n    const videoInputs = computed(() => devices.value.filter(i => i.kind === 'videoinput'));\r\n    const audioInputs = computed(() => devices.value.filter(i => i.kind === 'audioinput'));\r\n    const audioOutputs = computed(() => devices.value.filter(i => i.kind === 'audiooutput'));\r\n    let isSupported = false;\r\n    const permissionGranted = ref(false);\r\n    async function update() {\r\n        if (!isSupported)\r\n            return;\r\n        devices.value = await navigator.mediaDevices.enumerateDevices();\r\n        onUpdated === null || onUpdated === void 0 ? void 0 : onUpdated(devices.value);\r\n    }\r\n    async function ensurePermissions() {\r\n        if (!isSupported)\r\n            return false;\r\n        if (permissionGranted.value)\r\n            return true;\r\n        const { state, query } = usePermission('camera', { controls: true });\r\n        await query();\r\n        if (state.value !== 'granted') {\r\n            const stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: true });\r\n            stream.getTracks().forEach(t => t.stop());\r\n            update();\r\n            permissionGranted.value = true;\r\n        }\r\n        else {\r\n            permissionGranted.value = true;\r\n        }\r\n        return permissionGranted.value;\r\n    }\r\n    if (navigator) {\r\n        isSupported = Boolean(navigator.mediaDevices && navigator.mediaDevices.enumerateDevices);\r\n        if (isSupported) {\r\n            if (requestPermissions)\r\n                ensurePermissions();\r\n            useEventListener(navigator.mediaDevices, 'devicechange', update);\r\n            update();\r\n        }\r\n    }\r\n    return {\r\n        devices,\r\n        ensurePermissions,\r\n        permissionGranted,\r\n        videoInputs,\r\n        audioInputs,\r\n        audioOutputs,\r\n        isSupported,\r\n    };\r\n}\n\n/**\r\n * Reactively track `document.visibilityState`.\r\n *\r\n * @see https://vueuse.org/useDocumentVisibility\r\n * @param options\r\n */\r\nfunction useDocumentVisibility({ document = defaultDocument } = {}) {\r\n    if (!document)\r\n        return ref('visible');\r\n    const visibility = ref(document.visibilityState);\r\n    useEventListener(document, 'visibilitychange', () => {\r\n        visibility.value = document.visibilityState;\r\n    });\r\n    return visibility;\r\n}\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\n/**\r\n * Reports changes to the dimensions of an Element's content or the border-box\r\n *\r\n * @see https://vueuse.org/useResizeObserver\r\n * @param target\r\n * @param callback\r\n * @param options\r\n */\r\nfunction useResizeObserver(target, callback, options = {}) {\r\n    const { window = defaultWindow } = options, observerOptions = __rest(options, [\"window\"]);\r\n    let observer;\r\n    const isSupported = window && 'ResizeObserver' in window;\r\n    const cleanup = () => {\r\n        if (observer) {\r\n            observer.disconnect();\r\n            observer = undefined;\r\n        }\r\n    };\r\n    const stopWatch = watch(() => unrefElement(target), (el) => {\r\n        cleanup();\r\n        if (isSupported && window && el) {\r\n            // @ts-expect-error missing type\r\n            observer = new window.ResizeObserver(callback);\r\n            observer.observe(el, observerOptions);\r\n        }\r\n    }, { immediate: true, flush: 'post' });\r\n    const stop = () => {\r\n        cleanup();\r\n        stopWatch();\r\n    };\r\n    tryOnUnmounted(stop);\r\n    return {\r\n        isSupported,\r\n        stop,\r\n    };\r\n}\n\n/**\r\n * Reactive size of an HTML element.\r\n *\r\n * @see https://vueuse.org/useElementSize\r\n * @param target\r\n * @param callback\r\n * @param options\r\n */\r\nfunction useElementBounding(target, options = {}) {\r\n    const height = ref(0);\r\n    const bottom = ref(0);\r\n    const left = ref(0);\r\n    const right = ref(0);\r\n    const top = ref(0);\r\n    const width = ref(0);\r\n    const x = ref(0);\r\n    const y = ref(0);\r\n    useResizeObserver(target, ([entry]) => {\r\n        height.value = entry.contentRect.height;\r\n        bottom.value = entry.contentRect.bottom;\r\n        left.value = entry.contentRect.left;\r\n        right.value = entry.contentRect.right;\r\n        top.value = entry.contentRect.top;\r\n        width.value = entry.contentRect.width;\r\n        x.value = entry.contentRect.x;\r\n        y.value = entry.contentRect.y;\r\n    }, options);\r\n    return {\r\n        x,\r\n        y,\r\n        top,\r\n        right,\r\n        bottom,\r\n        left,\r\n        width,\r\n        height,\r\n    };\r\n}\n\n/**\r\n * Reactive size of an HTML element.\r\n *\r\n * @see https://vueuse.org/useElementSize\r\n * @param target\r\n * @param callback\r\n * @param options\r\n */\r\nfunction useElementSize(target, initialSize = { width: 0, height: 0 }, options = {}) {\r\n    const width = ref(initialSize.width);\r\n    const height = ref(initialSize.height);\r\n    useResizeObserver(target, ([entry]) => {\r\n        width.value = entry.contentRect.width;\r\n        height.value = entry.contentRect.height;\r\n    }, options);\r\n    return {\r\n        width,\r\n        height,\r\n    };\r\n}\n\n/**\r\n * Tracks the visibility of an element within the viewport.\r\n *\r\n * @see https://vueuse.org/useElementVisibility\r\n * @param element\r\n * @param options\r\n */\r\nfunction useElementVisibility(element, { window = defaultWindow, scrollTarget } = {}) {\r\n    const elementIsVisible = ref(false);\r\n    const testBounding = () => {\r\n        if (!window)\r\n            return;\r\n        const document = window.document;\r\n        if (!element.value) {\r\n            elementIsVisible.value = false;\r\n        }\r\n        else {\r\n            const rect = element.value.getBoundingClientRect();\r\n            elementIsVisible.value = (rect.top <= (window.innerHeight || document.documentElement.clientHeight)\r\n                && rect.left <= (window.innerWidth || document.documentElement.clientWidth)\r\n                && rect.bottom >= 0\r\n                && rect.right >= 0);\r\n        }\r\n    };\r\n    tryOnMounted(testBounding);\r\n    if (window)\r\n        tryOnMounted(() => useEventListener((scrollTarget === null || scrollTarget === void 0 ? void 0 : scrollTarget.value) || window, 'scroll', testBounding, { capture: false, passive: true }));\r\n    return elementIsVisible;\r\n}\n\n/**\r\n * Reactive wrapper for EventSource.\r\n *\r\n * @see https://vueuse.org/useEventSource\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/EventSource/EventSource EventSource\r\n * @param url\r\n * @param events\r\n */\r\nfunction useEventSource(url, events = []) {\r\n    const event = ref(null);\r\n    const data = ref(null);\r\n    const status = ref('CONNECTING');\r\n    const eventSource = ref(null);\r\n    const error = ref(null);\r\n    const close = () => {\r\n        if (eventSource.value) {\r\n            eventSource.value.close();\r\n            eventSource.value = null;\r\n            status.value = 'CLOSED';\r\n        }\r\n    };\r\n    tryOnMounted(() => {\r\n        const es = new EventSource(url);\r\n        eventSource.value = es;\r\n        es.onopen = () => {\r\n            status.value = 'OPEN';\r\n            error.value = null;\r\n        };\r\n        es.onerror = (e) => {\r\n            status.value = 'CLOSED';\r\n            error.value = e;\r\n        };\r\n        es.onmessage = (e) => {\r\n            event.value = null;\r\n            data.value = e.data;\r\n        };\r\n        for (const event_name of events) {\r\n            useEventListener(es, event_name, (e) => {\r\n                event.value = event_name;\r\n                data.value = e.data || null;\r\n            });\r\n        }\r\n    });\r\n    tryOnUnmounted(() => {\r\n        close();\r\n    });\r\n    return {\r\n        eventSource,\r\n        event,\r\n        data,\r\n        status,\r\n        error,\r\n        close,\r\n    };\r\n}\n\n/**\r\n * Reactive favicon.\r\n *\r\n * @see https://vueuse.org/useFavicon\r\n * @param newIcon\r\n * @param options\r\n */\r\nfunction useFavicon(newIcon = null, options = {}) {\r\n    const { baseUrl = '', rel = 'icon', document = defaultDocument, } = options;\r\n    const favicon = isRef(newIcon)\r\n        ? newIcon\r\n        : ref(newIcon);\r\n    const applyIcon = (icon) => {\r\n        document === null || document === void 0 ? void 0 : document.head.querySelectorAll(`link[rel*=\"${rel}\"]`).forEach(el => el.href = `${baseUrl}${icon}`);\r\n    };\r\n    watch(favicon, (i, o) => {\r\n        if (isString(i) && i !== o)\r\n            applyIcon(i);\r\n    }, { immediate: true });\r\n    return favicon;\r\n}\n\n/**\r\n * !!!IMPORTANT!!!\r\n *\r\n * If you update the UseFetchOptions interface, be sure to update this object\r\n * to include the new options\r\n */\r\nfunction isFetchOptions(obj) {\r\n    return containsProp(obj, 'immediate', 'refetch', 'beforeFetch', 'afterFetch');\r\n}\r\nfunction createFetch(config = {}) {\r\n    let options = config.options || {};\r\n    let fetchOptions = config.fetchOptions || {};\r\n    function useFactoryFetch(url, ...args) {\r\n        const computedUrl = computed(() => config.baseUrl\r\n            ? joinPaths(unref(config.baseUrl), unref(url))\r\n            : unref(url));\r\n        // Merge properties into a single object\r\n        if (args.length > 0) {\r\n            if (isFetchOptions(args[0])) {\r\n                options = Object.assign(Object.assign({}, options), args[0]);\r\n            }\r\n            else {\r\n                fetchOptions = Object.assign(Object.assign(Object.assign({}, fetchOptions), args[0]), { headers: Object.assign(Object.assign({}, (fetchOptions.headers || {})), (args[0].headers || {})) });\r\n            }\r\n        }\r\n        if (args.length > 1 && isFetchOptions(args[1]))\r\n            options = Object.assign(Object.assign({}, options), args[1]);\r\n        return useFetch(computedUrl, fetchOptions, options);\r\n    }\r\n    return useFactoryFetch;\r\n}\r\nfunction useFetch(url, ...args) {\r\n    const supportsAbort = typeof AbortController === 'function';\r\n    let fetchOptions = {};\r\n    let options = { immediate: true, refetch: false };\r\n    const config = {\r\n        method: 'get',\r\n        type: 'text',\r\n        payload: undefined,\r\n        payloadType: 'json',\r\n    };\r\n    let initialized = false;\r\n    if (args.length > 0) {\r\n        if (isFetchOptions(args[0]))\r\n            options = Object.assign(Object.assign({}, options), args[0]);\r\n        else\r\n            fetchOptions = args[0];\r\n    }\r\n    if (args.length > 1) {\r\n        if (isFetchOptions(args[1]))\r\n            options = Object.assign(Object.assign({}, options), args[1]);\r\n    }\r\n    const { fetch = defaultWindow === null || defaultWindow === void 0 ? void 0 : defaultWindow.fetch, } = options;\r\n    // Event Hooks\r\n    const responseEvent = createEventHook();\r\n    const errorEvent = createEventHook();\r\n    const isFinished = ref(false);\r\n    const isFetching = ref(false);\r\n    const aborted = ref(false);\r\n    const statusCode = ref(null);\r\n    const response = shallowRef(null);\r\n    const error = ref(null);\r\n    const data = shallowRef(null);\r\n    const canAbort = computed(() => supportsAbort && isFetching.value);\r\n    let controller;\r\n    const abort = () => {\r\n        if (supportsAbort && controller)\r\n            controller.abort();\r\n    };\r\n    const execute = async () => {\r\n        initialized = true;\r\n        isFetching.value = true;\r\n        isFinished.value = false;\r\n        error.value = null;\r\n        statusCode.value = null;\r\n        aborted.value = false;\r\n        controller = undefined;\r\n        if (supportsAbort) {\r\n            controller = new AbortController();\r\n            controller.signal.onabort = () => aborted.value = true;\r\n            fetchOptions = Object.assign(Object.assign({}, fetchOptions), { signal: controller.signal });\r\n        }\r\n        const defaultFetchOptions = {\r\n            method: config.method,\r\n            headers: {},\r\n        };\r\n        if (config.payload) {\r\n            const headers = defaultFetchOptions.headers;\r\n            if (config.payloadType === 'json') {\r\n                defaultFetchOptions.body = JSON.stringify(config.payload);\r\n                headers['Content-Type'] = 'application/json';\r\n            }\r\n            else {\r\n                defaultFetchOptions.body = config.payload;\r\n                headers['Content-Type'] = config.payloadType === 'formData'\r\n                    ? 'multipart/form-data'\r\n                    : 'text/plain';\r\n            }\r\n        }\r\n        let isCanceled = false;\r\n        const context = { url: unref(url), options: fetchOptions, cancel: () => { isCanceled = true; } };\r\n        if (options.beforeFetch)\r\n            Object.assign(context, await options.beforeFetch(context));\r\n        if (isCanceled || !fetch)\r\n            return Promise.resolve();\r\n        return new Promise((resolve) => {\r\n            var _a;\r\n            fetch(context.url, Object.assign(Object.assign(Object.assign({}, defaultFetchOptions), context.options), { headers: Object.assign(Object.assign({}, defaultFetchOptions.headers), (_a = context.options) === null || _a === void 0 ? void 0 : _a.headers) }))\r\n                .then(async (fetchResponse) => {\r\n                response.value = fetchResponse;\r\n                statusCode.value = fetchResponse.status;\r\n                let responseData = await fetchResponse[config.type]();\r\n                // see: https://www.tjvantoll.com/2015/09/13/fetch-and-errors/\r\n                if (!fetchResponse.ok)\r\n                    throw new Error(fetchResponse.statusText);\r\n                if (options.afterFetch)\r\n                    ({ data: responseData } = await options.afterFetch({ data: responseData, response: fetchResponse }));\r\n                data.value = responseData;\r\n                responseEvent.trigger(fetchResponse);\r\n                resolve(fetchResponse);\r\n            })\r\n                .catch((fetchError) => {\r\n                error.value = fetchError.message || fetchError.name;\r\n                errorEvent.trigger(fetchError);\r\n            })\r\n                .finally(() => {\r\n                isFinished.value = true;\r\n                isFetching.value = false;\r\n            });\r\n        });\r\n    };\r\n    watch(() => [\r\n        unref(url),\r\n        unref(options.refetch),\r\n    ], () => unref(options.refetch) && execute(), { deep: true });\r\n    const base = {\r\n        isFinished,\r\n        statusCode,\r\n        response,\r\n        error,\r\n        data,\r\n        isFetching,\r\n        canAbort,\r\n        aborted,\r\n        abort,\r\n        execute,\r\n        onFetchResponse: responseEvent.on,\r\n        onFetchError: errorEvent.on,\r\n    };\r\n    const shell = Object.assign(Object.assign({}, base), { get: setMethod('get'), put: setMethod('put'), post: setMethod('post'), delete: setMethod('delete'), json: setType('json'), text: setType('text'), blob: setType('blob'), arrayBuffer: setType('arrayBuffer'), formData: setType('formData') });\r\n    function setMethod(method) {\r\n        return (payload, payloadType) => {\r\n            if (!initialized) {\r\n                config.method = method;\r\n                config.payload = payload;\r\n                config.payloadType = payloadType || typeof payload === 'string' ? 'text' : 'json';\r\n                return shell;\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n    function setType(type) {\r\n        return () => {\r\n            if (!initialized) {\r\n                config.type = type;\r\n                return base;\r\n            }\r\n            return undefined;\r\n        };\r\n    }\r\n    if (options.immediate)\r\n        setTimeout(execute, 0);\r\n    return shell;\r\n}\r\nfunction joinPaths(start, end) {\r\n    if (!start.endsWith('/') && !end.startsWith('/'))\r\n        return `${start}/${end}`;\r\n    return `${start}${end}`;\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n// from: https://github.com/sindresorhus/screenfull.js/blob/master/src/screenfull.js\r\nconst functionsMap = [\r\n    [\r\n        'requestFullscreen',\r\n        'exitFullscreen',\r\n        'fullscreenElement',\r\n        'fullscreenEnabled',\r\n        'fullscreenchange',\r\n        'fullscreenerror',\r\n    ],\r\n    // New WebKit\r\n    [\r\n        'webkitRequestFullscreen',\r\n        'webkitExitFullscreen',\r\n        'webkitFullscreenElement',\r\n        'webkitFullscreenEnabled',\r\n        'webkitfullscreenchange',\r\n        'webkitfullscreenerror',\r\n    ],\r\n    // Old WebKit\r\n    [\r\n        'webkitRequestFullScreen',\r\n        'webkitCancelFullScreen',\r\n        'webkitCurrentFullScreenElement',\r\n        'webkitCancelFullScreen',\r\n        'webkitfullscreenchange',\r\n        'webkitfullscreenerror',\r\n    ],\r\n    [\r\n        'mozRequestFullScreen',\r\n        'mozCancelFullScreen',\r\n        'mozFullScreenElement',\r\n        'mozFullScreenEnabled',\r\n        'mozfullscreenchange',\r\n        'mozfullscreenerror',\r\n    ],\r\n    [\r\n        'msRequestFullscreen',\r\n        'msExitFullscreen',\r\n        'msFullscreenElement',\r\n        'msFullscreenEnabled',\r\n        'MSFullscreenChange',\r\n        'MSFullscreenError',\r\n    ],\r\n];\r\n/**\r\n * Reactive Fullscreen API.\r\n *\r\n * @see https://vueuse.org/useFullscreen\r\n * @param target\r\n * @param options\r\n */\r\nfunction useFullscreen(target, options = {}) {\r\n    const { document = defaultDocument } = options;\r\n    const targetRef = ref(target || (document === null || document === void 0 ? void 0 : document.querySelector('html')));\r\n    const isFullscreen = ref(false);\r\n    let isSupported = false;\r\n    let map = functionsMap[0];\r\n    if (!document) {\r\n        isSupported = false;\r\n    }\r\n    else {\r\n        for (const m of functionsMap) {\r\n            if (m[1] in document) {\r\n                map = m;\r\n                isSupported = true;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    const [REQUEST, EXIT, ELEMENT, , EVENT] = map;\r\n    async function exit() {\r\n        if (!isSupported)\r\n            return;\r\n        if (document === null || document === void 0 ? void 0 : document[ELEMENT])\r\n            await document[EXIT]();\r\n        isFullscreen.value = false;\r\n    }\r\n    async function enter() {\r\n        if (!isSupported)\r\n            return;\r\n        await exit();\r\n        if (targetRef.value) {\r\n            await targetRef.value[REQUEST]();\r\n            isFullscreen.value = true;\r\n        }\r\n    }\r\n    async function toggle() {\r\n        if (isFullscreen.value)\r\n            await exit();\r\n        else\r\n            await enter();\r\n    }\r\n    if (document) {\r\n        useEventListener(document, EVENT, () => {\r\n            isFullscreen.value = !!(document === null || document === void 0 ? void 0 : document[ELEMENT]);\r\n        }, false);\r\n    }\r\n    return {\r\n        isSupported,\r\n        isFullscreen,\r\n        enter,\r\n        exit,\r\n        toggle,\r\n    };\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive Geolocation API.\r\n *\r\n * @see https://vueuse.org/useGeolocation\r\n * @param options\r\n */\r\nfunction useGeolocation(options = {}) {\r\n    const { enableHighAccuracy = true, maximumAge = 30000, timeout = 27000, navigator = defaultNavigator, } = options;\r\n    const isSupported = navigator && 'geolocation' in navigator;\r\n    const locatedAt = ref(null);\r\n    const error = ref(null);\r\n    const coords = ref({\r\n        accuracy: 0,\r\n        latitude: 0,\r\n        longitude: 0,\r\n        altitude: null,\r\n        altitudeAccuracy: null,\r\n        heading: null,\r\n        speed: null,\r\n    });\r\n    function updatePosition(position) {\r\n        locatedAt.value = position.timestamp;\r\n        coords.value = position.coords;\r\n        error.value = null;\r\n    }\r\n    let watcher;\r\n    tryOnMounted(() => {\r\n        if (isSupported) {\r\n            watcher = navigator.geolocation.watchPosition(updatePosition, err => error.value = err, {\r\n                enableHighAccuracy,\r\n                maximumAge,\r\n                timeout,\r\n            });\r\n        }\r\n    });\r\n    tryOnUnmounted(() => {\r\n        if (watcher && navigator)\r\n            navigator.geolocation.clearWatch(watcher);\r\n    });\r\n    return {\r\n        isSupported,\r\n        coords,\r\n        locatedAt,\r\n        error,\r\n    };\r\n}\n\nconst defaultEvents = ['mousemove', 'mousedown', 'resize', 'keydown', 'touchstart', 'wheel'];\r\nconst oneMinute = 60000;\r\n/**\r\n * Tracks whether the user is being inactive.\r\n *\r\n * @see https://vueuse.org/useIdle\r\n * @param timeout default to 1 minute\r\n * @param options IdleOptions\r\n */\r\nfunction useIdle(timeout = oneMinute, options = {}) {\r\n    const { initialState = false, listenForVisibilityChange = true, events = defaultEvents, window = defaultWindow, eventFilter = throttleFilter(50), } = options;\r\n    const idle = ref(initialState);\r\n    const lastActive = ref(timestamp());\r\n    let timer;\r\n    const onEvent = createFilterWrapper(eventFilter, () => {\r\n        idle.value = false;\r\n        lastActive.value = timestamp();\r\n        clearTimeout(timer);\r\n        timer = setTimeout(() => idle.value = true, timeout);\r\n    });\r\n    if (window) {\r\n        const document = window.document;\r\n        for (const event of events)\r\n            useEventListener(window, event, onEvent, { passive: true });\r\n        if (listenForVisibilityChange) {\r\n            useEventListener(document, 'visibilitychange', () => {\r\n                if (!document.hidden)\r\n                    onEvent();\r\n            });\r\n        }\r\n    }\r\n    timer = setTimeout(() => idle.value = true, timeout);\r\n    return { idle, lastActive };\r\n}\n\n/**\r\n * Detects that a target element's visibility.\r\n *\r\n * @see https://vueuse.org/useIntersectionObserver\r\n * @param target\r\n * @param callback\r\n * @param options\r\n */\r\nfunction useIntersectionObserver(target, callback, options = {}) {\r\n    const { root, rootMargin = '0px', threshold = 0.1, window = defaultWindow, } = options;\r\n    const isSupported = window && 'IntersectionObserver' in window;\r\n    let cleanup = noop;\r\n    const stopWatch = isSupported\r\n        ? watch(() => ({\r\n            el: unrefElement(target),\r\n            root: unrefElement(root),\r\n        }), ({ el, root }) => {\r\n            cleanup();\r\n            if (!el)\r\n                return;\r\n            // @ts-expect-error missing type\r\n            const observer = new window.IntersectionObserver(callback, {\r\n                root,\r\n                rootMargin,\r\n                threshold,\r\n            });\r\n            observer.observe(el);\r\n            cleanup = () => {\r\n                observer.disconnect();\r\n                cleanup = noop;\r\n            };\r\n        }, { immediate: true, flush: 'post' })\r\n        : noop;\r\n    const stop = () => {\r\n        cleanup();\r\n        stopWatch();\r\n    };\r\n    tryOnUnmounted(stop);\r\n    return {\r\n        isSupported,\r\n        stop,\r\n    };\r\n}\n\n/**\r\n * Reactive LocalStorage.\r\n *\r\n * @see https://vueuse.org/useLocalStorage\r\n * @param key\r\n * @param defaultValue\r\n * @param options\r\n */\r\nfunction useLocalStorage(key, defaultValue, options = {}) {\r\n    const { window = defaultWindow } = options;\r\n    return useStorage(key, defaultValue, window === null || window === void 0 ? void 0 : window.localStorage, options);\r\n}\n\nconst DefaultMagicKeysAliasMap = {\r\n    ctrl: 'control',\r\n    command: 'meta',\r\n    cmd: 'meta',\r\n    option: 'alt',\r\n    up: 'arrowup',\r\n    down: 'arrowdown',\r\n    left: 'arrowleft',\r\n    right: 'arrowright',\r\n};\n\nfunction useMagicKeys(options = {}) {\r\n    const { reactive: useReactive = false, target = defaultWindow, aliasMap = DefaultMagicKeysAliasMap, passive = true, onEventFired = noop, } = options;\r\n    const current = reactive(new Set());\r\n    const obj = { toJSON() { return {}; }, current };\r\n    const refs = useReactive ? reactive(obj) : obj;\r\n    function updateRefs(e, value) {\r\n        const key = e.key.toLowerCase();\r\n        const code = e.code.toLowerCase();\r\n        const values = [code, key];\r\n        // current set\r\n        if (value)\r\n            current.add(e.code);\r\n        else\r\n            current.delete(e.code);\r\n        for (const key of values) {\r\n            if (key in refs) {\r\n                if (useReactive)\r\n                    refs[key] = value;\r\n                else\r\n                    refs[key].value = value;\r\n            }\r\n        }\r\n    }\r\n    if (target) {\r\n        useEventListener(target, 'keydown', (e) => {\r\n            updateRefs(e, true);\r\n            return onEventFired(e);\r\n        }, { passive });\r\n        useEventListener(target, 'keyup', (e) => {\r\n            updateRefs(e, false);\r\n            return onEventFired(e);\r\n        }, { passive });\r\n    }\r\n    const proxy = new Proxy(refs, {\r\n        get(target, prop, rec) {\r\n            if (typeof prop !== 'string')\r\n                return Reflect.get(target, prop, rec);\r\n            prop = prop.toLowerCase();\r\n            // alias\r\n            if (prop in aliasMap)\r\n                prop = aliasMap[prop];\r\n            // create new tracking\r\n            if (!(prop in refs)) {\r\n                if (/[+_-]/.test(prop)) {\r\n                    const keys = prop.split(/[+_-]/g).map(i => i.trim());\r\n                    refs[prop] = computed(() => keys.every(key => unref(proxy[key])));\r\n                }\r\n                else {\r\n                    refs[prop] = ref(false);\r\n                }\r\n            }\r\n            const r = Reflect.get(target, prop, rec);\r\n            return useReactive ? unref(r) : r;\r\n        },\r\n    });\r\n    return proxy;\r\n}\n\nconst fnClone = (v) => JSON.parse(JSON.stringify(v));\r\nconst fnBypass = (v) => v;\r\nconst fnSetSource = (source, value) => source.value = value;\r\nfunction defaultDump(clone) {\r\n    return (clone ? isFunction(clone) ? clone : fnClone : fnBypass);\r\n}\r\nfunction defaultParse(clone) {\r\n    return (clone ? isFunction(clone) ? clone : fnClone : fnBypass);\r\n}\r\n/**\r\n * Track the change history of a ref, also provides undo and redo functionality.\r\n *\r\n * @see https://vueuse.org/useManualRefHistory\r\n * @param source\r\n * @param options\r\n */\r\nfunction useManualRefHistory(source, options = {}) {\r\n    const { clone = false, dump = defaultDump(clone), parse = defaultParse(clone), setSource = fnSetSource, } = options;\r\n    function _createHistoryRecord() {\r\n        return markRaw({\r\n            snapshot: dump(source.value),\r\n            timestamp: timestamp(),\r\n        });\r\n    }\r\n    const last = ref(_createHistoryRecord());\r\n    const undoStack = ref([]);\r\n    const redoStack = ref([]);\r\n    const _setSource = (record) => {\r\n        setSource(source, parse(record.snapshot));\r\n        last.value = record;\r\n    };\r\n    const commit = () => {\r\n        undoStack.value.unshift(last.value);\r\n        last.value = _createHistoryRecord();\r\n        if (options.capacity && undoStack.value.length > options.capacity)\r\n            undoStack.value.splice(options.capacity, Infinity);\r\n        if (redoStack.value.length)\r\n            redoStack.value.splice(0, redoStack.value.length);\r\n    };\r\n    const clear = () => {\r\n        undoStack.value.splice(0, undoStack.value.length);\r\n        redoStack.value.splice(0, redoStack.value.length);\r\n    };\r\n    const undo = () => {\r\n        const state = undoStack.value.shift();\r\n        if (state) {\r\n            redoStack.value.unshift(last.value);\r\n            _setSource(state);\r\n        }\r\n    };\r\n    const redo = () => {\r\n        const state = redoStack.value.shift();\r\n        if (state) {\r\n            undoStack.value.unshift(last.value);\r\n            _setSource(state);\r\n        }\r\n    };\r\n    const reset = () => {\r\n        _setSource(last.value);\r\n    };\r\n    const history = computed(() => [last.value, ...undoStack.value]);\r\n    const canUndo = computed(() => undoStack.value.length > 0);\r\n    const canRedo = computed(() => redoStack.value.length > 0);\r\n    return {\r\n        source,\r\n        undoStack,\r\n        redoStack,\r\n        last,\r\n        history,\r\n        canUndo,\r\n        canRedo,\r\n        clear,\r\n        commit,\r\n        reset,\r\n        undo,\r\n        redo,\r\n    };\r\n}\n\n/**\r\n * Automatically check if the ref exists and if it does run the cb fn\r\n */\r\nfunction usingElRef(source, cb) {\r\n    if (unref(source))\r\n        cb(unref(source));\r\n}\r\n/**\r\n * Converts a TimeRange object to an array\r\n */\r\nfunction timeRangeToArray(timeRanges) {\r\n    let ranges = [];\r\n    for (let i = 0; i < timeRanges.length; ++i)\r\n        ranges = [...ranges, [timeRanges.start(i), timeRanges.end(i)]];\r\n    return ranges;\r\n}\r\n/**\r\n * Converts a TextTrackList object to an array of `UseMediaTextTrack`\r\n */\r\nfunction tracksToArray(tracks) {\r\n    return Array.from(tracks)\r\n        .map(({ label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }, id) => ({ id, label, kind, language, mode, activeCues, cues, inBandMetadataTrackDispatchType }));\r\n}\r\nconst defaultOptions = {\r\n    src: '',\r\n    tracks: [],\r\n};\r\nfunction useMediaControls(target, options = {}) {\r\n    options = Object.assign(Object.assign({}, defaultOptions), options);\r\n    const { document = defaultDocument, } = options;\r\n    const currentTime = ref(0);\r\n    const duration = ref(0);\r\n    const seeking = ref(false);\r\n    const buffering = ref(false);\r\n    const volume = ref(1);\r\n    const waiting = ref(false);\r\n    const ended = ref(false);\r\n    const playing = ref(false);\r\n    const rate = ref(1);\r\n    const stalled = ref(false);\r\n    const buffered = ref([]);\r\n    const tracks = ref([]);\r\n    const selectedTrack = ref(-1);\r\n    const isPictureInPicture = ref(false);\r\n    const muted = ref(unref(options.muted) || false);\r\n    const supportsPictureInPicture = document && 'pictureInPictureEnabled' in document;\r\n    // Events\r\n    const sourceErrorEvent = createEventHook();\r\n    /**\r\n     * Disables the specified track. If no track is specified then\r\n     * all tracks will be disabled\r\n     *\r\n     * @param track The id of the track to disable\r\n     */\r\n    const disableTrack = (track) => {\r\n        usingElRef(target, (el) => {\r\n            if (track) {\r\n                const id = isNumber(track) ? track : track.id;\r\n                el.textTracks[id].mode = 'disabled';\r\n            }\r\n            else {\r\n                for (let i = 0; i < el.textTracks.length; ++i)\r\n                    el.textTracks[i].mode = 'disabled';\r\n            }\r\n            selectedTrack.value = -1;\r\n        });\r\n    };\r\n    /**\r\n     * Enables the specified track and disables the\r\n     * other tracks unless otherwise specified\r\n     *\r\n     * @param track The track of the id of the track to enable\r\n     * @param disableTracks Disable all other tracks\r\n     */\r\n    const enableTrack = (track, disableTracks = true) => {\r\n        usingElRef(target, (el) => {\r\n            const id = isNumber(track) ? track : track.id;\r\n            if (disableTracks)\r\n                disableTrack();\r\n            el.textTracks[id].mode = 'showing';\r\n            selectedTrack.value = id;\r\n        });\r\n    };\r\n    /**\r\n     * Toggle picture in picture mode for the player.\r\n     */\r\n    const togglePictureInPicture = () => {\r\n        return new Promise((resolve, reject) => {\r\n            usingElRef(target, async (el) => {\r\n                if (supportsPictureInPicture) {\r\n                    if (!isPictureInPicture.value) {\r\n                        el.requestPictureInPicture()\r\n                            .then(resolve)\r\n                            .catch(reject);\r\n                    }\r\n                    else {\r\n                        document.exitPictureInPicture()\r\n                            .then(resolve)\r\n                            .catch(reject);\r\n                    }\r\n                }\r\n            });\r\n        });\r\n    };\r\n    // Apply Options\r\n    watchEffect(() => {\r\n        const el = unref(target);\r\n        if (!el)\r\n            return;\r\n        const loop = unref(options.loop);\r\n        if (loop !== undefined)\r\n            el.loop = loop;\r\n        const controls = unref(options.controls);\r\n        if (controls !== undefined)\r\n            el.controls = controls;\r\n        const muted = unref(options.muted);\r\n        if (muted !== undefined)\r\n            el.muted = muted;\r\n        const preload = unref(options.preload);\r\n        if (preload !== undefined)\r\n            el.preload = preload;\r\n        const autoplay = unref(options.autoplay);\r\n        if (autoplay !== undefined)\r\n            el.autoplay = autoplay;\r\n        const poster = unref(options.poster);\r\n        if (poster !== undefined)\r\n            el.poster = poster;\r\n        const playsInline = unref(options.playsinline);\r\n        if (playsInline !== undefined)\r\n            el.playsInline = playsInline;\r\n        const autoPictureInPicture = unref(options.autoPictureInPicture);\r\n        // @ts-expect-error HTMLVideoElement.autoPictureInPicture not implemented in TS\r\n        if (autoPictureInPicture !== undefined)\r\n            el.autoPictureInPicture = autoPictureInPicture;\r\n    });\r\n    /**\r\n     * This will automatically inject sources to the media element. The sources will be\r\n     * appended as children to the media element as `<source>` elements.\r\n     */\r\n    watchEffect(() => {\r\n        if (!document)\r\n            return;\r\n        const el = unref(target);\r\n        if (!el)\r\n            return;\r\n        const src = unref(options.src);\r\n        let sources = [];\r\n        if (!src)\r\n            return;\r\n        // Merge sources into an array\r\n        if (isString(src))\r\n            sources = [{ src }];\r\n        else if (Array.isArray(src))\r\n            sources = src;\r\n        else if (isObject(src))\r\n            sources = [src];\r\n        // Clear the sources\r\n        el.querySelectorAll('source').forEach((e) => {\r\n            e.removeEventListener('error', sourceErrorEvent.trigger);\r\n            e.remove();\r\n        });\r\n        // Add new sources\r\n        sources.forEach(({ src, type }) => {\r\n            const source = document.createElement('source');\r\n            source.setAttribute('src', src);\r\n            source.setAttribute('type', type || '');\r\n            source.addEventListener('error', sourceErrorEvent.trigger);\r\n            el.appendChild(source);\r\n        });\r\n        // Finally, load the new sources.\r\n        el.load();\r\n    });\r\n    // Remove source error listeners\r\n    tryOnUnmounted(() => {\r\n        const el = unref(target);\r\n        if (!el)\r\n            return;\r\n        el.querySelectorAll('source').forEach(e => e.removeEventListener('error', sourceErrorEvent.trigger));\r\n    });\r\n    /**\r\n     * Watch volume and change player volume when volume prop changes\r\n     */\r\n    watch(volume, (vol) => {\r\n        const el = unref(target);\r\n        if (!el)\r\n            return;\r\n        el.volume = vol;\r\n    });\r\n    watch(muted, (mute) => {\r\n        const el = unref(target);\r\n        if (!el)\r\n            return;\r\n        el.muted = mute;\r\n    });\r\n    /**\r\n     * Load Tracks\r\n     */\r\n    watchEffect(() => {\r\n        if (!document)\r\n            return;\r\n        const textTracks = unref(options.tracks);\r\n        const el = unref(target);\r\n        if (!textTracks || !textTracks.length || !el)\r\n            return;\r\n        /**\r\n         * The MediaAPI provides an API for adding text tracks, but they don't currently\r\n         * have an API for removing text tracks, so instead we will just create and remove\r\n         * the tracks manually using the HTML api.\r\n         */\r\n        el.querySelectorAll('track').forEach(e => e.remove());\r\n        textTracks.forEach(({ default: isDefault, kind, label, src, srcLang }, i) => {\r\n            const track = document.createElement('track');\r\n            track.default = isDefault || false;\r\n            track.kind = kind;\r\n            track.label = label;\r\n            track.src = src;\r\n            track.srclang = srcLang;\r\n            if (track.default)\r\n                selectedTrack.value = i;\r\n            el.appendChild(track);\r\n        });\r\n    });\r\n    /**\r\n     * This will allow us to update the current time from the timeupdate event\r\n     * without setting the medias current position, but if the user changes the\r\n     * current time via the ref, then the media will seek.\r\n     *\r\n     * If we did not use an ignorable watch, then the current time update from\r\n     * the timeupdate event would cause the media to stutter.\r\n     */\r\n    const { ignoreUpdates: ignoreCurrentTimeUpdates } = ignorableWatch(currentTime, (time) => {\r\n        const el = unref(target);\r\n        if (!el)\r\n            return;\r\n        el.currentTime = time;\r\n    });\r\n    /**\r\n     * Using an ignorable watch so we can control the play state using a ref and not\r\n     * a function\r\n     */\r\n    const { ignoreUpdates: ignorePlayingUpdates } = ignorableWatch(playing, (isPlaying) => {\r\n        const el = unref(target);\r\n        if (!el)\r\n            return;\r\n        isPlaying ? el.play() : el.pause();\r\n    });\r\n    useEventListener(target, 'timeupdate', () => ignoreCurrentTimeUpdates(() => currentTime.value = (unref(target)).currentTime));\r\n    useEventListener(target, 'durationchange', () => duration.value = (unref(target)).duration);\r\n    useEventListener(target, 'progress', () => buffered.value = timeRangeToArray((unref(target)).buffered));\r\n    useEventListener(target, 'seeking', () => seeking.value = true);\r\n    useEventListener(target, 'seeked', () => seeking.value = false);\r\n    useEventListener(target, 'waiting', () => waiting.value = true);\r\n    useEventListener(target, 'playing', () => waiting.value = false);\r\n    useEventListener(target, 'ratechange', () => rate.value = (unref(target)).playbackRate);\r\n    useEventListener(target, 'stalled', () => stalled.value = true);\r\n    useEventListener(target, 'ended', () => ended.value = true);\r\n    useEventListener(target, 'pause', () => ignorePlayingUpdates(() => playing.value = false));\r\n    useEventListener(target, 'play', () => ignorePlayingUpdates(() => playing.value = true));\r\n    useEventListener(target, 'enterpictureinpicture', () => isPictureInPicture.value = true);\r\n    useEventListener(target, 'leavepictureinpicture', () => isPictureInPicture.value = false);\r\n    useEventListener(target, 'volumechange', () => {\r\n        const el = unref(target);\r\n        if (!el)\r\n            return;\r\n        volume.value = el.volume;\r\n        muted.value = el.muted;\r\n    });\r\n    /**\r\n     * The following listeners need to listen to a nested\r\n     * object on the target, so we will have to use a nested\r\n     * watch and manually remove the listeners\r\n     */\r\n    const listeners = [];\r\n    const stop = watch([target], () => {\r\n        const el = unref(target);\r\n        if (!el)\r\n            return;\r\n        stop();\r\n        listeners[0] = useEventListener(el.textTracks, 'addtrack', () => tracks.value = tracksToArray(el.textTracks));\r\n        listeners[1] = useEventListener(el.textTracks, 'removetrack', () => tracks.value = tracksToArray(el.textTracks));\r\n        listeners[2] = useEventListener(el.textTracks, 'change', () => tracks.value = tracksToArray(el.textTracks));\r\n    });\r\n    // Remove text track listeners\r\n    tryOnUnmounted(() => listeners.forEach(listener => listener()));\r\n    return {\r\n        currentTime,\r\n        duration,\r\n        buffering,\r\n        waiting,\r\n        seeking,\r\n        ended,\r\n        stalled,\r\n        buffered,\r\n        playing,\r\n        // Volume\r\n        volume,\r\n        muted,\r\n        // Tracks\r\n        tracks,\r\n        selectedTrack,\r\n        enableTrack,\r\n        disableTrack,\r\n        // Picture in Picture\r\n        supportsPictureInPicture,\r\n        togglePictureInPicture,\r\n        isPictureInPicture,\r\n        // Events\r\n        onSourceError: sourceErrorEvent.on,\r\n    };\r\n}\n\n/**\r\n * Reactive mouse position.\r\n *\r\n * @see https://vueuse.org/useMouse\r\n * @param options\r\n */\r\nfunction useMouse(options = {}) {\r\n    const { touch = true, resetOnTouchEnds = false, initialValue = { x: 0, y: 0 }, window = defaultWindow, } = options;\r\n    const x = ref(initialValue.x);\r\n    const y = ref(initialValue.y);\r\n    const sourceType = ref(null);\r\n    const mouseHandler = (event) => {\r\n        x.value = event.pageX;\r\n        y.value = event.pageY;\r\n        sourceType.value = 'mouse';\r\n    };\r\n    const reset = () => {\r\n        x.value = initialValue.x;\r\n        y.value = initialValue.y;\r\n    };\r\n    const touchHandler = (event) => {\r\n        if (event.touches.length > 0) {\r\n            x.value = event.touches[0].clientX;\r\n            y.value = event.touches[0].clientY;\r\n            sourceType.value = 'touch';\r\n        }\r\n    };\r\n    if (window) {\r\n        useEventListener(window, 'mousemove', mouseHandler, { passive: true });\r\n        if (touch) {\r\n            useEventListener(window, 'touchstart', touchHandler, { passive: true });\r\n            useEventListener(window, 'touchmove', touchHandler, { passive: true });\r\n            if (resetOnTouchEnds)\r\n                useEventListener(window, 'touchend', reset, { passive: true });\r\n        }\r\n    }\r\n    return {\r\n        x,\r\n        y,\r\n        sourceType,\r\n    };\r\n}\n\n/**\r\n * Reactive mouse position related to an element.\r\n *\r\n * @see https://vueuse.org/useMouseInElement\r\n * @param target\r\n * @param options\r\n */\r\nfunction useMouseInElement(target, options = {}) {\r\n    const { handleOutside = true, window = defaultWindow, } = options;\r\n    const { x, y, sourceType } = useMouse(options);\r\n    const targetRef = ref(target !== null && target !== void 0 ? target : window === null || window === void 0 ? void 0 : window.document.body);\r\n    const elementX = ref(0);\r\n    const elementY = ref(0);\r\n    const elementPositionX = ref(0);\r\n    const elementPositionY = ref(0);\r\n    const elementHeight = ref(0);\r\n    const elementWidth = ref(0);\r\n    const isOutside = ref(false);\r\n    let stop = () => { };\r\n    if (window) {\r\n        stop = watch([targetRef, x, y], () => {\r\n            const el = unrefElement(targetRef);\r\n            if (!el)\r\n                return;\r\n            const { left, top, width, height, } = el.getBoundingClientRect();\r\n            elementPositionX.value = left + window.pageXOffset;\r\n            elementPositionY.value = top + window.pageYOffset;\r\n            elementHeight.value = height;\r\n            elementWidth.value = width;\r\n            const elX = x.value - elementPositionX.value;\r\n            const elY = y.value - elementPositionY.value;\r\n            isOutside.value = elX < 0 || elY < 0 || elX > elementWidth.value || elY > elementHeight.value;\r\n            if (handleOutside || !isOutside.value) {\r\n                elementX.value = elX;\r\n                elementY.value = elY;\r\n            }\r\n        }, { immediate: true });\r\n    }\r\n    return {\r\n        x,\r\n        y,\r\n        sourceType,\r\n        elementX,\r\n        elementY,\r\n        elementPositionX,\r\n        elementPositionY,\r\n        elementHeight,\r\n        elementWidth,\r\n        isOutside,\r\n        stop,\r\n    };\r\n}\n\n/**\r\n * Reactive mouse position.\r\n *\r\n * @see https://vueuse.org/useMousePressed\r\n * @param options\r\n */\r\nfunction useMousePressed(options = {}) {\r\n    const { touch = true, initialValue = false, window = defaultWindow, } = options;\r\n    const pressed = ref(initialValue);\r\n    const sourceType = ref(null);\r\n    if (!window) {\r\n        return {\r\n            pressed,\r\n            sourceType,\r\n        };\r\n    }\r\n    const onReleased = () => {\r\n        pressed.value = false;\r\n        sourceType.value = null;\r\n    };\r\n    const target = computed(() => unrefElement(options.target) || window);\r\n    useEventListener(window, 'mouseleave', onReleased, { passive: true });\r\n    useEventListener(window, 'mouseup', onReleased, { passive: true });\r\n    useEventListener(target, 'mousedown', () => {\r\n        pressed.value = true;\r\n        sourceType.value = 'mouse';\r\n    }, { passive: true });\r\n    if (touch) {\r\n        useEventListener(window, 'touchend', onReleased, { passive: true });\r\n        useEventListener(window, 'touchcancel', onReleased, { passive: true });\r\n        useEventListener(target, 'touchstart', () => {\r\n            pressed.value = true;\r\n            sourceType.value = 'touch';\r\n        }, { passive: true });\r\n    }\r\n    return {\r\n        pressed,\r\n        sourceType,\r\n    };\r\n}\n\n/**\r\n * Watch for changes being made to the DOM tree.\r\n *\r\n * @see https://vueuse.org/useMutationObserver\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver MutationObserver MDN\r\n * @param target\r\n * @param callback\r\n * @param options\r\n */\r\nfunction useMutationObserver(target, callback, options = {}) {\r\n    const { window = defaultWindow } = options, mutationOptions = __rest(options, [\"window\"]);\r\n    let observer;\r\n    const isSupported = window && 'IntersectionObserver' in window;\r\n    const cleanup = () => {\r\n        if (observer) {\r\n            observer.disconnect();\r\n            observer = undefined;\r\n        }\r\n    };\r\n    const stopWatch = watch(() => unrefElement(target), (el) => {\r\n        cleanup();\r\n        if (isSupported && window && el) {\r\n            // @ts-expect-error missing type\r\n            observer = new window.MutationObserver(callback);\r\n            observer.observe(el, mutationOptions);\r\n        }\r\n    }, { immediate: true });\r\n    const stop = () => {\r\n        cleanup();\r\n        stopWatch();\r\n    };\r\n    tryOnUnmounted(stop);\r\n    return {\r\n        isSupported,\r\n        stop,\r\n    };\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive Network status.\r\n *\r\n * @see https://vueuse.org/useNetwork\r\n * @param options\r\n */\r\nfunction useNetwork(options = {}) {\r\n    const { window = defaultWindow } = options;\r\n    const navigator = window === null || window === void 0 ? void 0 : window.navigator;\r\n    const isSupported = Boolean(navigator && 'connection' in navigator);\r\n    const isOnline = ref(true);\r\n    const saveData = ref(false);\r\n    const offlineAt = ref(undefined);\r\n    const downlink = ref(undefined);\r\n    const downlinkMax = ref(undefined);\r\n    const effectiveType = ref(undefined);\r\n    const type = ref('unknown');\r\n    const connection = isSupported && navigator.connection;\r\n    function updateNetworkInformation() {\r\n        if (!navigator)\r\n            return;\r\n        isOnline.value = navigator.onLine;\r\n        offlineAt.value = isOnline.value ? undefined : Date.now();\r\n        if (connection) {\r\n            downlink.value = connection.downlink;\r\n            downlinkMax.value = connection.downlinkMax;\r\n            effectiveType.value = connection.effectiveType;\r\n            saveData.value = connection.saveData;\r\n            type.value = connection.type;\r\n        }\r\n    }\r\n    if (window) {\r\n        useEventListener(window, 'offline', () => {\r\n            isOnline.value = false;\r\n            offlineAt.value = Date.now();\r\n        });\r\n        useEventListener(window, 'online', () => {\r\n            isOnline.value = true;\r\n        });\r\n    }\r\n    if (connection)\r\n        useEventListener(connection, 'change', updateNetworkInformation, false);\r\n    updateNetworkInformation();\r\n    return {\r\n        isSupported,\r\n        isOnline,\r\n        saveData,\r\n        offlineAt,\r\n        downlink,\r\n        downlinkMax,\r\n        effectiveType,\r\n        type,\r\n    };\r\n}\n\n/**\r\n * Call function on every `requestAnimationFrame`. With controls of pausing and resuming.\r\n *\r\n * @see https://vueuse.org/useRafFn\r\n * @param fn\r\n * @param options\r\n */\r\nfunction useRafFn(fn, options = {}) {\r\n    const { immediate = true, window = defaultWindow, } = options;\r\n    const isActive = ref(false);\r\n    function loop() {\r\n        if (!isActive.value)\r\n            return;\r\n        fn();\r\n        if (window)\r\n            window.requestAnimationFrame(loop);\r\n    }\r\n    function resume() {\r\n        if (!isActive.value) {\r\n            isActive.value = true;\r\n            loop();\r\n        }\r\n    }\r\n    function pause() {\r\n        isActive.value = false;\r\n    }\r\n    if (immediate)\r\n        resume();\r\n    tryOnUnmounted(pause);\r\n    return {\r\n        isActive,\r\n        pause,\r\n        resume,\r\n        stop: pause,\r\n        start: resume,\r\n    };\r\n}\n\n/**\r\n * Reactive current timestamp.\r\n *\r\n * @see https://vueuse.org/useNow\r\n * @param options\r\n */\r\nfunction useNow(options = {}) {\r\n    const { interval = 'requestAnimationFrame', } = options;\r\n    const now = ref(new Date());\r\n    const update = () => now.value = new Date();\r\n    const controls = interval === 'requestAnimationFrame'\r\n        ? useRafFn(update, { immediate: true })\r\n        : useIntervalFn(update, interval, true);\r\n    return Object.assign({ now }, controls);\r\n}\n\n/**\r\n * Reactive online state.\r\n *\r\n * @see https://vueuse.org/useOnline\r\n * @param options\r\n */\r\nfunction useOnline(options = {}) {\r\n    const { isOnline } = useNetwork(options);\r\n    return isOnline;\r\n}\n\n/**\r\n * Reactive state to show whether mouse leaves the page.\r\n *\r\n * @see https://vueuse.org/usePageLeave\r\n * @param options\r\n */\r\nfunction usePageLeave(options = {}) {\r\n    const { window = defaultWindow } = options;\r\n    const isLeft = ref(false);\r\n    const handler = (event) => {\r\n        if (!window)\r\n            return;\r\n        event = event || window.event;\r\n        // @ts-ignore\r\n        const from = event.relatedTarget || event.toElement;\r\n        isLeft.value = !from;\r\n    };\r\n    if (window) {\r\n        useEventListener(window, 'mouseout', handler, { passive: true });\r\n        useEventListener(window.document, 'mouseleave', handler, { passive: true });\r\n        useEventListener(window.document, 'mouseenter', handler, { passive: true });\r\n    }\r\n    return isLeft;\r\n}\n\n/**\r\n * Create parallax effect easily. It uses `useDeviceOrientation` and fallback to `useMouse`\r\n * if orientation is not supported.\r\n *\r\n * @param target\r\n * @param options\r\n */\r\nfunction useParallax(target, options = {}) {\r\n    const { deviceOrientationTiltAdjust = i => i, deviceOrientationRollAdjust = i => i, mouseTiltAdjust = i => i, mouseRollAdjust = i => i, window = defaultWindow, } = options;\r\n    const orientation = reactive(useDeviceOrientation({ window }));\r\n    const { elementX: x, elementY: y, elementWidth: width, elementHeight: height, } = useMouseInElement(target, { handleOutside: false, window });\r\n    const source = computed(() => {\r\n        if (orientation.isSupported\r\n            && ((orientation.alpha != null && orientation.alpha !== 0) || (orientation.gamma != null && orientation.gamma !== 0)))\r\n            return 'deviceOrientation';\r\n        return 'mouse';\r\n    });\r\n    const roll = computed(() => {\r\n        if (source.value === 'deviceOrientation') {\r\n            const value = -orientation.beta / 90;\r\n            return deviceOrientationRollAdjust(value);\r\n        }\r\n        else {\r\n            const value = -(y.value - height.value / 2) / height.value;\r\n            return mouseRollAdjust(value);\r\n        }\r\n    });\r\n    const tilt = computed(() => {\r\n        if (source.value === 'deviceOrientation') {\r\n            const value = orientation.gamma / 90;\r\n            return deviceOrientationTiltAdjust(value);\r\n        }\r\n        else {\r\n            const value = (x.value - width.value / 2) / width.value;\r\n            return mouseTiltAdjust(value);\r\n        }\r\n    });\r\n    return { roll, tilt, source };\r\n}\n\nvar SwipeDirection;\r\n(function (SwipeDirection) {\r\n    SwipeDirection[\"UP\"] = \"UP\";\r\n    SwipeDirection[\"RIGHT\"] = \"RIGHT\";\r\n    SwipeDirection[\"DOWN\"] = \"DOWN\";\r\n    SwipeDirection[\"LEFT\"] = \"LEFT\";\r\n    SwipeDirection[\"NONE\"] = \"NONE\";\r\n})(SwipeDirection || (SwipeDirection = {}));\r\n/**\r\n * Reactive swipe detection.\r\n *\r\n * @see https://vueuse.org/useSwipe\r\n * @param target\r\n * @param options\r\n */\r\nfunction useSwipe(target, options = {}) {\r\n    const { threshold = 50, onSwipe, onSwipeEnd, onSwipeStart, passive = true, window = defaultWindow, } = options;\r\n    const coordsStart = reactive({ x: 0, y: 0 });\r\n    const coordsEnd = reactive({ x: 0, y: 0 });\r\n    const diffX = computed(() => coordsStart.x - coordsEnd.x);\r\n    const diffY = computed(() => coordsStart.y - coordsEnd.y);\r\n    const { max, abs } = Math;\r\n    const isThresholdExceeded = computed(() => max(abs(diffX.value), abs(diffY.value)) >= threshold);\r\n    const isSwiping = ref(false);\r\n    const direction = computed(() => {\r\n        if (!isThresholdExceeded.value)\r\n            return SwipeDirection.NONE;\r\n        if (abs(diffX.value) > abs(diffY.value)) {\r\n            return diffX.value > 0\r\n                ? SwipeDirection.LEFT\r\n                : SwipeDirection.RIGHT;\r\n        }\r\n        else {\r\n            return diffY.value > 0\r\n                ? SwipeDirection.UP\r\n                : SwipeDirection.DOWN;\r\n        }\r\n    });\r\n    const getTouchEventCoords = (e) => [e.touches[0].clientX, e.touches[0].clientY];\r\n    const updateCoordsStart = (x, y) => {\r\n        coordsStart.x = x;\r\n        coordsStart.y = y;\r\n    };\r\n    const updateCoordsEnd = (x, y) => {\r\n        coordsEnd.x = x;\r\n        coordsEnd.y = y;\r\n    };\r\n    let listenerOptions;\r\n    const isPassiveEventSupported = checkPassiveEventSupport(window === null || window === void 0 ? void 0 : window.document);\r\n    if (!passive)\r\n        listenerOptions = isPassiveEventSupported ? { passive: false, capture: true } : { capture: true };\r\n    else\r\n        listenerOptions = isPassiveEventSupported ? { passive: true } : { capture: false };\r\n    const stops = [\r\n        useEventListener(target, 'touchstart', (e) => {\r\n            if (listenerOptions.capture && !listenerOptions.passive)\r\n                e.preventDefault();\r\n            const [x, y] = getTouchEventCoords(e);\r\n            updateCoordsStart(x, y);\r\n            updateCoordsEnd(x, y);\r\n            onSwipeStart === null || onSwipeStart === void 0 ? void 0 : onSwipeStart(e);\r\n        }, listenerOptions),\r\n        useEventListener(target, 'touchmove', (e) => {\r\n            const [x, y] = getTouchEventCoords(e);\r\n            updateCoordsEnd(x, y);\r\n            if (!isSwiping.value && isThresholdExceeded.value)\r\n                isSwiping.value = true;\r\n            if (isSwiping.value)\r\n                onSwipe === null || onSwipe === void 0 ? void 0 : onSwipe(e);\r\n        }, listenerOptions),\r\n        useEventListener(target, 'touchend', (e) => {\r\n            if (isSwiping.value)\r\n                onSwipeEnd === null || onSwipeEnd === void 0 ? void 0 : onSwipeEnd(e, direction.value);\r\n            isSwiping.value = false;\r\n        }, listenerOptions),\r\n    ];\r\n    const stop = () => stops.forEach(s => s());\r\n    return {\r\n        isPassiveEventSupported,\r\n        isSwiping,\r\n        direction,\r\n        coordsStart,\r\n        coordsEnd,\r\n        lengthX: diffX,\r\n        lengthY: diffY,\r\n        stop,\r\n    };\r\n}\r\n/**\r\n * This is a polyfill for passive event support detection\r\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\r\n */\r\nfunction checkPassiveEventSupport(document) {\r\n    if (!document)\r\n        return false;\r\n    let supportsPassive = false;\r\n    const optionsBlock = {\r\n        get passive() {\r\n            supportsPassive = true;\r\n            return false;\r\n        },\r\n    };\r\n    document.addEventListener('x', noop, optionsBlock);\r\n    document.removeEventListener('x', noop);\r\n    return supportsPassive;\r\n}\n\n/**\r\n * Reactive swipe detection based on PointerEvents.\r\n *\r\n * @see https://vueuse.org/usePointerSwipe\r\n * @param target\r\n * @param options\r\n */\r\nfunction usePointerSwipe(target, options = {}) {\r\n    const targetRef = ref(target);\r\n    const { threshold = 50, onSwipe, onSwipeEnd, onSwipeStart, } = options;\r\n    const posStart = reactive({ x: 0, y: 0 });\r\n    const updatePosStart = (x, y) => {\r\n        posStart.x = x;\r\n        posStart.y = y;\r\n    };\r\n    const posEnd = reactive({ x: 0, y: 0 });\r\n    const updatePosEnd = (x, y) => {\r\n        posEnd.x = x;\r\n        posEnd.y = y;\r\n    };\r\n    const distanceX = computed(() => posStart.x - posEnd.x);\r\n    const distanceY = computed(() => posStart.y - posEnd.y);\r\n    const { max, abs } = Math;\r\n    const isThresholdExceeded = computed(() => max(abs(distanceX.value), abs(distanceY.value)) >= threshold);\r\n    const isSwiping = ref(false);\r\n    const isPointerDown = ref(false);\r\n    const direction = computed(() => {\r\n        if (!isThresholdExceeded.value)\r\n            return SwipeDirection.NONE;\r\n        if (abs(distanceX.value) > abs(distanceY.value)) {\r\n            return distanceX.value > 0\r\n                ? SwipeDirection.LEFT\r\n                : SwipeDirection.RIGHT;\r\n        }\r\n        else {\r\n            return distanceY.value > 0\r\n                ? SwipeDirection.UP\r\n                : SwipeDirection.DOWN;\r\n        }\r\n    });\r\n    const stops = [\r\n        useEventListener(target, 'pointerdown', (e) => {\r\n            var _a, _b;\r\n            isPointerDown.value = true;\r\n            // Disable scroll on for TouchEvents\r\n            (_a = targetRef.value) === null || _a === void 0 ? void 0 : _a.setAttribute('style', 'touch-action: none');\r\n            // Future pointer events will be retargeted to target until pointerup/cancel\r\n            (_b = targetRef.value) === null || _b === void 0 ? void 0 : _b.setPointerCapture(e.pointerId);\r\n            const { clientX: x, clientY: y } = e;\r\n            updatePosStart(x, y);\r\n            updatePosEnd(x, y);\r\n            onSwipeStart === null || onSwipeStart === void 0 ? void 0 : onSwipeStart(e);\r\n        }),\r\n        useEventListener(target, 'pointermove', (e) => {\r\n            if (!isPointerDown.value)\r\n                return;\r\n            const { clientX: x, clientY: y } = e;\r\n            updatePosEnd(x, y);\r\n            if (!isSwiping.value && isThresholdExceeded.value)\r\n                isSwiping.value = true;\r\n            if (isSwiping.value)\r\n                onSwipe === null || onSwipe === void 0 ? void 0 : onSwipe(e);\r\n        }),\r\n        useEventListener(target, 'pointerup', (e) => {\r\n            var _a;\r\n            if (isSwiping.value)\r\n                onSwipeEnd === null || onSwipeEnd === void 0 ? void 0 : onSwipeEnd(e, direction.value);\r\n            isPointerDown.value = false;\r\n            isSwiping.value = false;\r\n            (_a = targetRef.value) === null || _a === void 0 ? void 0 : _a.setAttribute('style', 'touch-action: initial');\r\n        }),\r\n    ];\r\n    const stop = () => stops.forEach(s => s());\r\n    return {\r\n        isSwiping: readonly(isSwiping),\r\n        direction: readonly(direction),\r\n        posStart: readonly(posStart),\r\n        posEnd: readonly(posEnd),\r\n        distanceX,\r\n        distanceY,\r\n        stop,\r\n    };\r\n}\n\n/**\r\n * Reactive prefers-color-scheme media query.\r\n *\r\n * @see https://vueuse.org/usePreferredColorScheme\r\n * @param [options]\r\n */\r\nfunction usePreferredColorScheme(options) {\r\n    const isLight = useMediaQuery('(prefers-color-scheme: light)', options);\r\n    const isDark = useMediaQuery('(prefers-color-scheme: dark)', options);\r\n    return computed(() => {\r\n        if (isDark.value)\r\n            return 'dark';\r\n        if (isLight.value)\r\n            return 'light';\r\n        return 'no-preference';\r\n    });\r\n}\n\n/**\r\n * Reactive Navigator Languages.\r\n *\r\n * @see https://vueuse.org/usePreferredLanguages\r\n * @param options\r\n */\r\nfunction usePreferredLanguages(options = {}) {\r\n    const { window = defaultWindow } = options;\r\n    if (!window)\r\n        return ref(['en']);\r\n    const navigator = window.navigator;\r\n    const value = ref(navigator.languages);\r\n    useEventListener(window, 'languagechange', () => {\r\n        value.value = navigator.languages;\r\n    });\r\n    return value;\r\n}\n\n/**\r\n * Track the change history of a ref, also provides undo and redo functionality.\r\n *\r\n * @see https://vueuse.org/useRefHistory\r\n * @param source\r\n * @param options\r\n */\r\nfunction useRefHistory(source, options = {}) {\r\n    const { deep = false, flush = 'pre', } = options;\r\n    const { eventFilter, pause, resume: resumeTracking, isActive: isTracking } = pausableFilter();\r\n    const { ignoreUpdates, ignorePrevAsyncUpdates, stop } = ignorableWatch(source, commit, { deep, flush, eventFilter });\r\n    function setSource(source, value) {\r\n        // Support changes that are done after the last history operation\r\n        // examples:\r\n        //   undo, modify\r\n        //   undo, undo, modify\r\n        // If there were already changes in the state, they will be ignored\r\n        // examples:\r\n        //   modify, undo\r\n        //   undo, modify, undo\r\n        ignorePrevAsyncUpdates();\r\n        ignoreUpdates(() => {\r\n            source.value = value;\r\n        });\r\n    }\r\n    const manualHistory = useManualRefHistory(source, Object.assign(Object.assign({}, options), { clone: options.clone || deep, setSource }));\r\n    const { clear, commit: manualCommit } = manualHistory;\r\n    function commit() {\r\n        // This guard only applies for flush 'pre' and 'post'\r\n        // If the user triggers a commit manually, then reset the watcher\r\n        // so we do not trigger an extra commit in the async watcher\r\n        ignorePrevAsyncUpdates();\r\n        manualCommit();\r\n    }\r\n    function resume(commitNow) {\r\n        resumeTracking();\r\n        if (commitNow)\r\n            commit();\r\n    }\r\n    function batch(fn) {\r\n        let canceled = false;\r\n        const cancel = () => canceled = true;\r\n        ignoreUpdates(() => {\r\n            fn(cancel);\r\n        });\r\n        if (!canceled)\r\n            commit();\r\n    }\r\n    function dispose() {\r\n        stop();\r\n        clear();\r\n    }\r\n    return Object.assign(Object.assign({}, manualHistory), { isTracking,\r\n        pause,\r\n        resume,\r\n        commit,\r\n        batch,\r\n        dispose });\r\n}\n\n/**\r\n * Async script tag loading.\r\n *\r\n * @see https://vueuse.org/useScriptTag\r\n * @param src\r\n */\r\nfunction useScriptTag(src, onLoaded = noop, options = {}) {\r\n    const { immediate = true, manual = false, type = 'text/javascript', async = true, crossOrigin, referrerPolicy, noModule, defer, document = defaultDocument, } = options;\r\n    const scriptTag = ref(null);\r\n    let _promise = null;\r\n    /**\r\n     * Load the script specified via `src`.\r\n     *\r\n     * @param waitForScriptLoad Whether if the Promise should resolve once the \"load\" event is emitted by the <script> attribute, or right after appending it to the DOM.\r\n     * @returns Promise<HTMLScriptElement>\r\n     */\r\n    const loadScript = (waitForScriptLoad) => new Promise((resolve, reject) => {\r\n        // Some little closure for resolving the Promise.\r\n        const resolveWithElement = (el) => {\r\n            scriptTag.value = el;\r\n            resolve(el);\r\n            return el;\r\n        };\r\n        // Check if document actually exists, otherwise resolve the Promise (SSR Support).\r\n        if (!document) {\r\n            resolve(false);\r\n            return;\r\n        }\r\n        // Local variable defining if the <script> tag should be appended or not.\r\n        let shouldAppend = false;\r\n        let el = document.querySelector(`script[src=\"${src}\"]`);\r\n        // Script tag not found, preparing the element for appending\r\n        if (!el) {\r\n            el = document.createElement('script');\r\n            el.type = type;\r\n            el.async = async;\r\n            el.src = unref(src);\r\n            // Optional attributes\r\n            if (defer)\r\n                el.defer = defer;\r\n            if (crossOrigin)\r\n                el.crossOrigin = crossOrigin;\r\n            if (noModule)\r\n                el.noModule = noModule;\r\n            if (referrerPolicy)\r\n                el.referrerPolicy = referrerPolicy;\r\n            // Enables shouldAppend\r\n            shouldAppend = true;\r\n        }\r\n        // Script tag already exists, resolve the loading Promise with it.\r\n        else if (el.hasAttribute('data-loaded')) {\r\n            resolveWithElement(el);\r\n        }\r\n        // Event listeners\r\n        el.addEventListener('error', event => reject(event));\r\n        el.addEventListener('abort', event => reject(event));\r\n        el.addEventListener('load', () => {\r\n            el.setAttribute('data-loaded', 'true');\r\n            onLoaded(el);\r\n            resolveWithElement(el);\r\n        });\r\n        // Append the <script> tag to head.\r\n        if (shouldAppend)\r\n            el = document.head.appendChild(el);\r\n        // If script load awaiting isn't needed, we can resolve the Promise.\r\n        if (!waitForScriptLoad)\r\n            resolveWithElement(el);\r\n    });\r\n    /**\r\n     * Exposed singleton wrapper for `loadScript`, avoiding calling it twice.\r\n     *\r\n     * @param waitForScriptLoad Whether if the Promise should resolve once the \"load\" event is emitted by the <script> attribute, or right after appending it to the DOM.\r\n     * @returns Promise<HTMLScriptElement>\r\n     */\r\n    const load = (waitForScriptLoad = true) => {\r\n        if (!_promise)\r\n            _promise = loadScript(waitForScriptLoad);\r\n        return _promise;\r\n    };\r\n    /**\r\n     * Unload the script specified by `src`.\r\n     */\r\n    const unload = () => {\r\n        if (!document)\r\n            return;\r\n        _promise = null;\r\n        if (scriptTag.value) {\r\n            document.head.removeChild(scriptTag.value);\r\n            scriptTag.value = null;\r\n        }\r\n    };\r\n    if (immediate && !manual)\r\n        tryOnMounted(load);\r\n    if (!manual)\r\n        tryOnUnmounted(unload);\r\n    return { scriptTag, load, unload };\r\n}\n\n/**\r\n * Reactive SessionStorage.\r\n *\r\n * @see https://vueuse.org/useSessionStorage\r\n * @param key\r\n * @param defaultValue\r\n * @param options\r\n */\r\nfunction useSessionStorage(key, defaultValue, options = {}) {\r\n    const { window = defaultWindow } = options;\r\n    return useStorage(key, defaultValue, window === null || window === void 0 ? void 0 : window.sessionStorage, options);\r\n}\n\n/**\r\n * Reactive Web Share API.\r\n *\r\n * @see https://vueuse.org/useShare\r\n * @param shareOptions\r\n * @param options\r\n */\r\nfunction useShare(shareOptions = {}, options = {}) {\r\n    const { navigator = defaultNavigator } = options;\r\n    const _navigator = navigator;\r\n    const isSupported = _navigator && 'canShare' in _navigator;\r\n    const share = async (overrideOptions = {}) => {\r\n        if (isSupported) {\r\n            const data = Object.assign(Object.assign({}, unref(shareOptions)), unref(overrideOptions));\r\n            let granted = true;\r\n            if (data.files && _navigator.canShare)\r\n                granted = _navigator.canShare({ files: data.files });\r\n            if (granted)\r\n                return _navigator.share(data);\r\n        }\r\n    };\r\n    return {\r\n        isSupported,\r\n        share,\r\n    };\r\n}\n\n// ported from https://www.reddit.com/r/vuejs/comments/jksizl/speech_recognition_as_a_vue_3_hook\r\n/**\r\n * Reactive SpeechRecognition.\r\n *\r\n * @see https://vueuse.org/useSpeechRecognition\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/SpeechRecognition SpeechRecognition\r\n * @param options\r\n */\r\nfunction useSpeechRecognition(options = {}) {\r\n    const { lang = 'en-US', interimResults = true, continuous = true, window = defaultWindow, } = options;\r\n    const isListening = ref(false);\r\n    const isFinal = ref(false);\r\n    const result = ref('');\r\n    const error = shallowRef(undefined);\r\n    const toggle = (value = !isListening.value) => {\r\n        isListening.value = value;\r\n    };\r\n    const start = () => {\r\n        isListening.value = true;\r\n    };\r\n    const stop = () => {\r\n        isListening.value = false;\r\n    };\r\n    const SpeechRecognition = window && (window.SpeechRecognition || window.webkitSpeechRecognition);\r\n    const isSupported = Boolean(SpeechRecognition);\r\n    let recognition;\r\n    if (isSupported) {\r\n        recognition = new SpeechRecognition();\r\n        recognition.continuous = continuous;\r\n        recognition.interimResults = interimResults;\r\n        recognition.lang = lang;\r\n        recognition.onstart = () => {\r\n            isFinal.value = false;\r\n        };\r\n        recognition.onresult = (event) => {\r\n            const transcript = Array.from(event.results)\r\n                .map((result) => {\r\n                isFinal.value = result.isFinal;\r\n                return result[0];\r\n            })\r\n                .map(result => result.transcript)\r\n                .join('');\r\n            result.value = transcript;\r\n            error.value = undefined;\r\n        };\r\n        recognition.onerror = (event) => {\r\n            error.value = event;\r\n        };\r\n        recognition.onend = () => {\r\n            isListening.value = false;\r\n        };\r\n        watch(isListening, () => {\r\n            if (isListening.value)\r\n                recognition.start();\r\n            else\r\n                recognition.stop();\r\n        });\r\n    }\r\n    tryOnUnmounted(() => {\r\n        isListening.value = false;\r\n    });\r\n    return {\r\n        isSupported,\r\n        isListening,\r\n        isFinal,\r\n        recognition,\r\n        result,\r\n        error,\r\n        toggle,\r\n        start,\r\n        stop,\r\n    };\r\n}\n\nconst UNITS = [\r\n    { max: 60000, value: 1000, name: 'second' },\r\n    { max: 2760000, value: 60000, name: 'minute' },\r\n    { max: 72000000, value: 3600000, name: 'hour' },\r\n    { max: 518400000, value: 86400000, name: 'day' },\r\n    { max: 2419200000, value: 604800000, name: 'week' },\r\n    { max: 28512000000, value: 2592000000, name: 'month' },\r\n    { max: Infinity, value: 31536000000, name: 'year' },\r\n];\r\nconst DEFAULT_MESSAGES = {\r\n    justNow: 'just now',\r\n    past: n => n.match(/\\d/) ? `${n} ago` : n,\r\n    future: n => n.match(/\\d/) ? `in ${n}` : n,\r\n    month: (n, past) => n === 1\r\n        ? past\r\n            ? 'last month'\r\n            : 'next month'\r\n        : `${n} month${n > 1 ? 's' : ''}`,\r\n    year: (n, past) => n === 1\r\n        ? past\r\n            ? 'last year'\r\n            : 'next year'\r\n        : `${n} year${n > 1 ? 's' : ''}`,\r\n    day: (n, past) => n === 1\r\n        ? past\r\n            ? 'yesterday'\r\n            : 'tomorrow'\r\n        : `${n} day${n > 1 ? 's' : ''}`,\r\n    week: (n, past) => n === 1\r\n        ? past\r\n            ? 'last week'\r\n            : 'next week'\r\n        : `${n} week${n > 1 ? 's' : ''}`,\r\n    hour: n => `${n} hour${n > 1 ? 's' : ''}`,\r\n    minute: n => `${n} minute${n > 1 ? 's' : ''}`,\r\n    second: n => `${n} second${n > 1 ? 's' : ''}`,\r\n};\r\nconst DEFAULT_FORMATTER = (date) => date.toISOString().slice(0, 10);\r\n/**\r\n * Reactive time ago formatter.\r\n *\r\n * @see https://vueuse.org/useTimeAgo\r\n * @param options\r\n */\r\nfunction useTimeAgo(time, options = {}) {\r\n    const { max, updateInterval = 30000, messages = DEFAULT_MESSAGES, fullDateFormatter = DEFAULT_FORMATTER, } = options;\r\n    const { abs, round } = Math;\r\n    const { now } = useNow({ interval: updateInterval });\r\n    function getTimeago(from, now) {\r\n        var _a;\r\n        const diff = +now - +from;\r\n        const absDiff = abs(diff);\r\n        // less than a minute\r\n        if (absDiff < 60000)\r\n            return messages.justNow;\r\n        if (typeof max === 'number' && absDiff > max)\r\n            return fullDateFormatter(new Date(from));\r\n        if (typeof max === 'string') {\r\n            const unitMax = (_a = UNITS.find(i => i.name === max)) === null || _a === void 0 ? void 0 : _a.max;\r\n            if (unitMax && absDiff > unitMax)\r\n                return fullDateFormatter(new Date(from));\r\n        }\r\n        for (const unit of UNITS) {\r\n            if (absDiff < unit.max)\r\n                return format(diff, unit);\r\n        }\r\n    }\r\n    function applyFormat(name, val, isPast) {\r\n        const formatter = messages[name];\r\n        if (typeof formatter === 'function')\r\n            return formatter(val, isPast);\r\n        return formatter.replace('{0}', val.toString());\r\n    }\r\n    function format(diff, unit) {\r\n        const val = round(abs(diff) / unit.value);\r\n        const past = diff > 0;\r\n        const str = applyFormat(unit.name, val, past);\r\n        return applyFormat(past ? 'past' : 'future', str, past);\r\n    }\r\n    return computed(() => getTimeago(new Date(unref(time)), unref(now.value)));\r\n}\n\n/**\r\n * Reactive current timestamp.\r\n *\r\n * @see https://vueuse.org/useTimestamp\r\n * @param options\r\n */\r\nfunction useTimestamp(options = {}) {\r\n    const { offset = 0, interval = 'requestAnimationFrame', } = options;\r\n    const ts = ref(timestamp() + offset);\r\n    const update = () => ts.value = timestamp() + offset;\r\n    const controls = interval === 'requestAnimationFrame'\r\n        ? useRafFn(update, { immediate: true })\r\n        : useIntervalFn(update, interval, true);\r\n    return Object.assign({ timestamp: ts }, controls);\r\n}\n\n/**\r\n * Reactive document title.\r\n *\r\n * @see https://vueuse.org/useTitle\r\n * @param newTitle\r\n * @param options\r\n */\r\nfunction useTitle(newTitle = null, options = {}) {\r\n    var _a, _b;\r\n    const { document = defaultDocument, observe = false, } = options;\r\n    const title = ref((_a = newTitle !== null && newTitle !== void 0 ? newTitle : document === null || document === void 0 ? void 0 : document.title) !== null && _a !== void 0 ? _a : null);\r\n    watch(title, (t, o) => {\r\n        if (isString(t) && t !== o && document)\r\n            document.title = t;\r\n    }, { immediate: true });\r\n    if (observe && document) {\r\n        useMutationObserver((_b = document.head) === null || _b === void 0 ? void 0 : _b.querySelector('title'), () => {\r\n            if (document && document.title !== title.value)\r\n                title.value = document.title;\r\n        }, { childList: true });\r\n    }\r\n    return title;\r\n}\n\n/**\r\n * Create an easing function from cubic bezier points.\r\n */\r\nfunction createEasingFunction([p0, p1, p2, p3]) {\r\n    const a = (a1, a2) => 1 - 3 * a2 + 3 * a1;\r\n    const b = (a1, a2) => 3 * a2 - 6 * a1;\r\n    const c = (a1) => 3 * a1;\r\n    const calcBezier = (t, a1, a2) => ((a(a1, a2) * t + b(a1, a2)) * t + c(a1)) * t;\r\n    const getSlope = (t, a1, a2) => 3 * a(a1, a2) * t * t + 2 * b(a1, a2) * t + c(a1);\r\n    const getTforX = (x) => {\r\n        let aGuessT = x;\r\n        for (let i = 0; i < 4; ++i) {\r\n            const currentSlope = getSlope(aGuessT, p0, p2);\r\n            if (currentSlope === 0)\r\n                return aGuessT;\r\n            const currentX = calcBezier(aGuessT, p0, p2) - x;\r\n            aGuessT -= currentX / currentSlope;\r\n        }\r\n        return aGuessT;\r\n    };\r\n    return (x) => p0 === p1 && p2 === p3 ? x : calcBezier(getTforX(x), p1, p3);\r\n}\r\n/**\r\n * Common transitions\r\n *\r\n * @see https://easings.net\r\n */\r\nconst TransitionPresets = {\r\n    linear: [0, 0, 1, 1],\r\n    easeInSine: [0.12, 0, 0.39, 0],\r\n    easeOutSine: [0.61, 1, 0.88, 1],\r\n    easeInQuad: [0.11, 0, 0.5, 0],\r\n    easeOutQuad: [0.5, 1, 0.89, 1],\r\n    easeInCubic: [0.32, 0, 0.67, 0],\r\n    easeOutCubic: [0.33, 1, 0.68, 1],\r\n    easeInOutCubic: [0.65, 0, 0.35, 1],\r\n    easeInQuart: [0.5, 0, 0.75, 0],\r\n    easeOutQuart: [0.25, 1, 0.5, 1],\r\n    easeInOutQuart: [0.76, 0, 0.24, 1],\r\n    easeInQuint: [0.64, 0, 0.78, 0],\r\n    easeOutQuint: [0.22, 1, 0.36, 1],\r\n    easeInOutQuint: [0.83, 0, 0.17, 1],\r\n    easeInExpo: [0.7, 0, 0.84, 0],\r\n    easeOutExpo: [0.16, 1, 0.3, 1],\r\n    easeInOutExpo: [0.87, 0, 0.13, 1],\r\n    easeInCirc: [0.55, 0, 1, 0.45],\r\n    easeOutCirc: [0, 0.55, 0.45, 1],\r\n    easeInOutCirc: [0.85, 0, 0.15, 1],\r\n    easeInBack: [0.36, 0, 0.66, -0.56],\r\n    easeOutBack: [0.34, 1.56, 0.64, 1],\r\n    easeInOutBack: [0.68, -0.6, 0.32, 1.6],\r\n};\r\n/**\r\n * Transition between values.\r\n *\r\n * @see https://vueuse.org/useTransition\r\n * @param source\r\n * @param options\r\n */\r\nfunction useTransition(source, options = {}) {\r\n    const { duration = 500, onFinished = noop, onStarted = noop, transition = (n) => n, } = options;\r\n    const output = ref(source.value);\r\n    const currentTransition = computed(() => {\r\n        const t = unref(transition);\r\n        return isFunction(t) ? t : createEasingFunction(t);\r\n    });\r\n    let currentDuration = 0;\r\n    let diff = 0;\r\n    let endAt = 0;\r\n    let startAt = 0;\r\n    let startValue = 0;\r\n    const { resume, pause } = useRafFn(() => {\r\n        const now = Date.now();\r\n        const progress = clamp(1 - ((endAt - now) / currentDuration), 0, 1);\r\n        output.value = startValue + (diff * currentTransition.value(progress));\r\n        if (progress >= 1) {\r\n            pause();\r\n            onFinished();\r\n        }\r\n    }, { immediate: false });\r\n    watch(source, () => {\r\n        pause();\r\n        currentDuration = unref(duration);\r\n        diff = source.value - output.value;\r\n        startValue = output.value;\r\n        startAt = Date.now();\r\n        endAt = startAt + currentDuration;\r\n        resume();\r\n        onStarted();\r\n    });\r\n    return output;\r\n}\n\n/**\r\n * Reactive URLSearchParams\r\n *\r\n * @see https://vueuse.org/useUrlSearchParams\r\n * @param mode\r\n * @param options\r\n */\r\nfunction useUrlSearchParams(mode = 'history', options = {}) {\r\n    const { window = defaultWindow } = options;\r\n    if (!window)\r\n        return reactive(Object.assign({}));\r\n    const hashWithoutParams = computed(() => {\r\n        const hash = window.location.hash || '';\r\n        const index = hash.indexOf('?');\r\n        return index > 0 ? hash.substring(0, index) : hash;\r\n    });\r\n    const read = () => {\r\n        if (mode === 'hash') {\r\n            const hash = window.location.hash || '';\r\n            const index = hash.indexOf('?');\r\n            return new URLSearchParams(index >= 0 ? hash.substring(index + 1) : '');\r\n        }\r\n        else {\r\n            return new URLSearchParams(window.location.search || '');\r\n        }\r\n    };\r\n    let params = read();\r\n    const paramsMap = reactive(Object.assign({}));\r\n    function writeToParamsMap(key, value) {\r\n        return paramsMap[key] = value;\r\n    }\r\n    function updateParamsMap() {\r\n        Object.keys(paramsMap).forEach(key => delete paramsMap[key]);\r\n        for (const key of params.keys()) {\r\n            const paramsForKey = params.getAll(key);\r\n            writeToParamsMap(key, paramsForKey.length > 1 ? paramsForKey : (params.get(key) || ''));\r\n        }\r\n    }\r\n    // Update the paramsMap with initial values\r\n    updateParamsMap();\r\n    const { pause, resume } = pausableWatch(paramsMap, () => {\r\n        params = new URLSearchParams('');\r\n        Object.keys(paramsMap).forEach((key) => {\r\n            const mapEntry = paramsMap[key];\r\n            if (Array.isArray(mapEntry))\r\n                mapEntry.forEach(value => params.append(key, value));\r\n            else\r\n                params.set(key, mapEntry);\r\n        });\r\n        write(params);\r\n    }, { deep: true });\r\n    function write(params, shouldUpdateParamsMap) {\r\n        pause();\r\n        if (shouldUpdateParamsMap)\r\n            updateParamsMap();\r\n        const empty = !params.keys().next();\r\n        const query = empty\r\n            ? hashWithoutParams.value\r\n            : (mode === 'hash')\r\n                ? `${hashWithoutParams.value}?${params}`\r\n                : `?${params}${hashWithoutParams.value}`;\r\n        if (window)\r\n            window.history.replaceState({}, '', window.location.pathname + query);\r\n        resume();\r\n    }\r\n    useEventListener(window, 'popstate', () => {\r\n        params = read();\r\n        write(params, true);\r\n    });\r\n    return paramsMap;\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Reactive `mediaDevices.getUserMedia` streaming\r\n *\r\n * @see https://vueuse.org/useUserMedia\r\n * @param options\r\n */\r\nfunction useUserMedia(options = {}) {\r\n    var _a, _b, _c;\r\n    const enabled = ref((_a = options.enabled) !== null && _a !== void 0 ? _a : false);\r\n    const autoSwitch = ref((_b = options.autoSwitch) !== null && _b !== void 0 ? _b : true);\r\n    const videoDeviceId = ref(options.videoDeviceId);\r\n    const audioDeviceId = ref(options.audioDeviceId);\r\n    const { navigator = defaultNavigator } = options;\r\n    const isSupported = Boolean((_c = navigator === null || navigator === void 0 ? void 0 : navigator.mediaDevices) === null || _c === void 0 ? void 0 : _c.getUserMedia);\r\n    const stream = shallowRef();\r\n    function getDeviceOptions(device) {\r\n        if (device.value === 'none' || device.value === false)\r\n            return false;\r\n        if (device.value == null)\r\n            return true;\r\n        return {\r\n            deviceId: device.value,\r\n        };\r\n    }\r\n    async function _start() {\r\n        if (!isSupported || stream.value)\r\n            return;\r\n        stream.value = await navigator.mediaDevices.getUserMedia({\r\n            video: getDeviceOptions(videoDeviceId),\r\n            audio: getDeviceOptions(audioDeviceId),\r\n        });\r\n        return stream.value;\r\n    }\r\n    async function _stop() {\r\n        var _a;\r\n        (_a = stream.value) === null || _a === void 0 ? void 0 : _a.getTracks().forEach(t => t.stop());\r\n        stream.value = undefined;\r\n    }\r\n    function stop() {\r\n        _stop();\r\n        enabled.value = false;\r\n    }\r\n    async function start() {\r\n        await _start();\r\n        if (stream.value)\r\n            enabled.value = true;\r\n        return stream.value;\r\n    }\r\n    async function restart() {\r\n        _stop();\r\n        return await start();\r\n    }\r\n    watch(enabled, (v) => {\r\n        if (v)\r\n            _start();\r\n        else\r\n            _stop();\r\n    }, { immediate: true });\r\n    watch([videoDeviceId, audioDeviceId], () => {\r\n        if (autoSwitch.value && stream.value)\r\n            restart();\r\n    }, { immediate: true });\r\n    return {\r\n        isSupported,\r\n        stream,\r\n        start,\r\n        stop,\r\n        restart,\r\n        videoDeviceId,\r\n        audioDeviceId,\r\n        enabled,\r\n        autoSwitch,\r\n    };\r\n}\n\n/**\r\n * Shorthand for v-model binding, props + emit -> ref\r\n *\r\n * @see https://vueuse.org/useVModel\r\n * @param props\r\n * @param key (default 'value' in Vue 2 and 'modelValue' in Vue 3)\r\n * @param emit\r\n */\r\nfunction useVModel(props, key, emit, options = {}) {\r\n    var _a, _b, _c;\r\n    const { passive = false, eventName, } = options;\r\n    const vm = getCurrentInstance();\r\n    // @ts-expect-error mis-alignment with @vue/composition-api\r\n    const _emit = emit || (vm === null || vm === void 0 ? void 0 : vm.emit) || ((_a = vm === null || vm === void 0 ? void 0 : vm.$emit) === null || _a === void 0 ? void 0 : _a.bind(vm));\r\n    let event = eventName;\r\n    if (!key) {\r\n        if (isVue2) {\r\n            const modelOptions = (_c = (_b = vm === null || vm === void 0 ? void 0 : vm.proxy) === null || _b === void 0 ? void 0 : _b.$options) === null || _c === void 0 ? void 0 : _c.model;\r\n            key = (modelOptions === null || modelOptions === void 0 ? void 0 : modelOptions.value) || 'value';\r\n            if (!eventName)\r\n                event = (modelOptions === null || modelOptions === void 0 ? void 0 : modelOptions.event) || 'input';\r\n        }\r\n        else {\r\n            key = 'modelValue';\r\n        }\r\n    }\r\n    event = eventName || event || `update:${key}`;\r\n    if (passive) {\r\n        const proxy = ref(props[key]);\r\n        watch(() => props[key], v => proxy.value = v);\r\n        watch(proxy, (v) => {\r\n            if (v !== props[key])\r\n                _emit(event, v);\r\n        });\r\n        return proxy;\r\n    }\r\n    else {\r\n        return computed({\r\n            get() {\r\n                return props[key];\r\n            },\r\n            set(value) {\r\n                _emit(event, value);\r\n            },\r\n        });\r\n    }\r\n}\n\n/**\r\n * Shorthand for props v-model binding. Think like `toRefs(props)` but changes will also emit out.\r\n *\r\n * @see https://vueuse.org/useVModels\r\n * @param props\r\n * @param emit\r\n */\r\nfunction useVModels(props, emit, options = {}) {\r\n    const ret = {};\r\n    // eslint-disable-next-line no-restricted-syntax\r\n    for (const key in props)\r\n        ret[key] = useVModel(props, key, emit, options);\r\n    return ret;\r\n}\n\nfunction resolveNestedOptions(options) {\r\n    if (options === true)\r\n        return {};\r\n    return options;\r\n}\r\n/**\r\n * Reactive WebSocket client.\r\n *\r\n * @see https://vueuse.org/useWebSocket\r\n * @param url\r\n */\r\nfunction useWebSocket(url, options = {}) {\r\n    const { onConnected, onDisconnected, onError, onMessage, } = options;\r\n    const data = ref(null);\r\n    const status = ref('CONNECTING');\r\n    const wsRef = ref();\r\n    let heartbeatPause;\r\n    let heartbeatResume;\r\n    let explicitlyClosed = false;\r\n    let retried = 0;\r\n    let bufferedData = [];\r\n    const close = (code, reason) => {\r\n        if (!wsRef.value)\r\n            return;\r\n        explicitlyClosed = true;\r\n        heartbeatPause === null || heartbeatPause === void 0 ? void 0 : heartbeatPause();\r\n        wsRef.value.close(code, reason);\r\n    };\r\n    const _sendBuffer = () => {\r\n        if (bufferedData.length && wsRef.value && status.value === 'OPEN') {\r\n            for (const buffer of bufferedData)\r\n                wsRef.value.send(buffer);\r\n            bufferedData = [];\r\n        }\r\n    };\r\n    const send = (data, useBuffer = true) => {\r\n        if (!wsRef.value || status.value !== 'OPEN') {\r\n            if (useBuffer)\r\n                bufferedData.push(data);\r\n            return false;\r\n        }\r\n        _sendBuffer();\r\n        wsRef.value.send(data);\r\n        return true;\r\n    };\r\n    const _init = () => {\r\n        const ws = new WebSocket(url);\r\n        wsRef.value = ws;\r\n        status.value = 'CONNECTING';\r\n        explicitlyClosed = false;\r\n        ws.onopen = () => {\r\n            status.value = 'OPEN';\r\n            onConnected === null || onConnected === void 0 ? void 0 : onConnected(ws);\r\n            heartbeatResume === null || heartbeatResume === void 0 ? void 0 : heartbeatResume();\r\n            _sendBuffer();\r\n        };\r\n        ws.onclose = (ev) => {\r\n            status.value = 'CLOSED';\r\n            wsRef.value = undefined;\r\n            onDisconnected === null || onDisconnected === void 0 ? void 0 : onDisconnected(ws, ev);\r\n            if (!explicitlyClosed && options.autoReconnect) {\r\n                const { retries = -1, delay = 1000, onFailed, } = resolveNestedOptions(options.autoReconnect);\r\n                retried += 1;\r\n                if (retries < 0 || retried < retries)\r\n                    setTimeout(_init, delay);\r\n                else\r\n                    onFailed === null || onFailed === void 0 ? void 0 : onFailed();\r\n            }\r\n        };\r\n        ws.onerror = (e) => {\r\n            onError === null || onError === void 0 ? void 0 : onError(ws, e);\r\n        };\r\n        ws.onmessage = (e) => {\r\n            data.value = e.data;\r\n            onMessage === null || onMessage === void 0 ? void 0 : onMessage(ws, e);\r\n        };\r\n    };\r\n    if (options.heartbeat) {\r\n        const { message = 'ping', interval = 1000, } = resolveNestedOptions(options.heartbeat);\r\n        const { pause, resume } = useIntervalFn(() => send(message, false), interval, false);\r\n        heartbeatPause = pause;\r\n        heartbeatResume = resume;\r\n    }\r\n    if (options.immediate)\r\n        _init();\r\n    const open = () => {\r\n        close();\r\n        retried = 0;\r\n        _init();\r\n    };\r\n    tryOnUnmounted(close);\r\n    return {\r\n        data,\r\n        status,\r\n        close,\r\n        send,\r\n        open,\r\n        ws: wsRef,\r\n    };\r\n}\n\n/* this implementation is original ported from https://github.com/logaretm/vue-use-web by Abdelrahman Awad */\r\n/**\r\n * Simple Web Workers registration and communication.\r\n *\r\n * @see https://vueuse.org/useWebWorker\r\n * @param url\r\n * @param workerOptions\r\n * @param options\r\n */\r\nfunction useWebWorker(url, workerOptions, options = {}) {\r\n    const { window = defaultWindow, } = options;\r\n    const data = ref(null);\r\n    const worker = shallowRef();\r\n    const post = function post(val) {\r\n        if (!worker.value)\r\n            return;\r\n        worker.value.postMessage(val);\r\n    };\r\n    const terminate = function terminate() {\r\n        if (!worker.value)\r\n            return;\r\n        worker.value.terminate();\r\n    };\r\n    if (window) {\r\n        // @ts-expect-error untyped\r\n        worker.value = new window.Worker(url, workerOptions);\r\n        worker.value.onmessage = (e) => {\r\n            data.value = e.data;\r\n        };\r\n        tryOnUnmounted(() => {\r\n            if (worker.value)\r\n                worker.value.terminate();\r\n        });\r\n    }\r\n    return {\r\n        data,\r\n        post,\r\n        terminate,\r\n        worker,\r\n    };\r\n}\n\n/**\r\n * This function accepts as a parameter a function \"userFunc\"\r\n * And as a result returns an anonymous function.\r\n * This anonymous function, accepts as arguments,\r\n * the parameters to pass to the function \"useArgs\" and returns a Promise\r\n * This function can be used as a wrapper, only inside a Worker\r\n * because it depends by \"postMessage\".\r\n *\r\n * @param {Function} userFunc {Function} fn the function to run with web worker\r\n *\r\n * @returns {Function} returns a function that accepts the parameters\r\n * to be passed to the \"userFunc\" function\r\n */\r\nconst jobRunner = (userFunc) => (e) => {\r\n    const userFuncArgs = e.data[0];\r\n    // eslint-disable-next-line prefer-spread\r\n    return Promise.resolve(userFunc.apply(undefined, userFuncArgs))\r\n        .then((result) => {\r\n        // @ts-ignore\r\n        postMessage(['SUCCESS', result]);\r\n    })\r\n        .catch((error) => {\r\n        // @ts-ignore\r\n        postMessage(['ERROR', error]);\r\n    });\r\n};\n\n/**\r\n *\r\n * Concatenates the dependencies into a comma separated string.\r\n * this string will then be passed as an argument to the \"importScripts\" function\r\n *\r\n * @param {Array.<String>}} deps array of string\r\n * @returns {String} a string composed by the concatenation of the array\r\n * elements \"deps\" and \"importScripts\".\r\n *\r\n * @example\r\n * depsParser(['demo1', 'demo2']) // return importScripts('demo1, demo2')\r\n */\r\nconst depsParser = (deps) => {\r\n    if (deps.length === 0)\r\n        return '';\r\n    const depsString = deps.map(dep => `${dep}`).toString();\r\n    return `importScripts('${depsString}')`;\r\n};\n\n/**\r\n * Converts the \"fn\" function into the syntax needed to be executed within a web worker\r\n *\r\n * @param {Function} fn the function to run with web worker\r\n * @param {Array.<String>} deps array of strings, imported into the worker through \"importScripts\"\r\n *\r\n * @returns {String} a blob url, containing the code of \"fn\" as a string\r\n *\r\n * @example\r\n * createWorkerBlobUrl((a,b) => a+b, [])\r\n * // return \"onmessage=return Promise.resolve((a,b) => a + b)\r\n * .then(postMessage(['SUCCESS', result]))\r\n * .catch(postMessage(['ERROR', error])\"\r\n */\r\nconst createWorkerBlobUrl = (fn, deps) => {\r\n    const blobCode = `${depsParser(deps)}; onmessage=(${jobRunner})(${fn})`;\r\n    const blob = new Blob([blobCode], { type: 'text/javascript' });\r\n    const url = URL.createObjectURL(blob);\r\n    return url;\r\n};\n\n/* this implementation is a vue port of https://github.com/alewin/useWorker by Alessio Koci */\r\n/**\r\n * Run expensive function without blocking the UI, using a simple syntax that makes use of Promise.\r\n *\r\n * @see https://vueuse.org/useWebWorkerFn\r\n * @param fn\r\n * @param options\r\n */\r\nconst useWebWorkerFn = (fn, options = {}) => {\r\n    const { dependencies = [], timeout, window = defaultWindow, } = options;\r\n    const worker = ref();\r\n    const workerStatus = ref('PENDING');\r\n    const promise = ref({});\r\n    const timeoutId = ref();\r\n    const workerTerminate = (status = 'PENDING') => {\r\n        if (worker.value && worker.value._url && window) {\r\n            worker.value.terminate();\r\n            URL.revokeObjectURL(worker.value._url);\r\n            promise.value = {};\r\n            worker.value = undefined;\r\n            window.clearTimeout(timeoutId.value);\r\n            workerStatus.value = status;\r\n        }\r\n    };\r\n    workerTerminate();\r\n    tryOnUnmounted(workerTerminate);\r\n    const generateWorker = () => {\r\n        const blobUrl = createWorkerBlobUrl(fn, dependencies);\r\n        const newWorker = new Worker(blobUrl);\r\n        newWorker._url = blobUrl;\r\n        newWorker.onmessage = (e) => {\r\n            const { resolve = () => { }, reject = () => { } } = promise.value;\r\n            const [status, result] = e.data;\r\n            switch (status) {\r\n                case 'SUCCESS':\r\n                    resolve(result);\r\n                    workerTerminate(status);\r\n                    break;\r\n                default:\r\n                    reject(result);\r\n                    workerTerminate('ERROR');\r\n                    break;\r\n            }\r\n        };\r\n        newWorker.onerror = (e) => {\r\n            const { reject = () => { } } = promise.value;\r\n            reject(e);\r\n            workerTerminate('ERROR');\r\n        };\r\n        if (timeout) {\r\n            timeoutId.value = setTimeout(() => workerTerminate('TIMEOUT_EXPIRED'), timeout);\r\n        }\r\n        return newWorker;\r\n    };\r\n    const callWorker = (...fnArgs) => new Promise((resolve, reject) => {\r\n        promise.value = {\r\n            resolve,\r\n            reject,\r\n        };\r\n        worker.value && worker.value.postMessage([[...fnArgs]]);\r\n        workerStatus.value = 'RUNNING';\r\n    });\r\n    const workerFn = (...fnArgs) => {\r\n        if (workerStatus.value === 'RUNNING') {\r\n            /* eslint-disable-next-line no-console */\r\n            console.error('[useWebWorkerFn] You can only run one instance of the worker at a time.');\r\n            /* eslint-disable-next-line prefer-promise-reject-errors */\r\n            return Promise.reject();\r\n        }\r\n        worker.value = generateWorker();\r\n        return callWorker(...fnArgs);\r\n    };\r\n    return {\r\n        workerFn,\r\n        workerStatus,\r\n        workerTerminate,\r\n    };\r\n};\n\n/**\r\n * Reactive window scroll.\r\n *\r\n * @see https://vueuse.org/useWindowScroll\r\n * @param options\r\n */\r\nfunction useWindowScroll({ window = defaultWindow } = {}) {\r\n    if (!window) {\r\n        return {\r\n            x: ref(0),\r\n            y: ref(0),\r\n        };\r\n    }\r\n    const x = ref(window.pageXOffset);\r\n    const y = ref(window.pageYOffset);\r\n    useEventListener('scroll', () => {\r\n        x.value = window.pageXOffset;\r\n        y.value = window.pageYOffset;\r\n    }, {\r\n        capture: false,\r\n        passive: true,\r\n    });\r\n    return { x, y };\r\n}\n\n/**\r\n * Reactive window size.\r\n *\r\n * @see https://vueuse.org/useWindowSize\r\n * @param options\r\n */\r\nfunction useWindowSize({ window = defaultWindow, initialWidth = Infinity, initialHeight = Infinity } = {}) {\r\n    if (!window) {\r\n        return {\r\n            width: ref(initialWidth),\r\n            height: ref(initialHeight),\r\n        };\r\n    }\r\n    const width = ref(window.innerWidth);\r\n    const height = ref(window.innerHeight);\r\n    useEventListener('resize', () => {\r\n        width.value = window.innerWidth;\r\n        height.value = window.innerHeight;\r\n    }, { passive: true });\r\n    return { width, height };\r\n}\n\nexport { DefaultMagicKeysAliasMap, SwipeDirection, TransitionPresets, asyncComputed, autoResetRef, breakpointsAntDesign, breakpointsBootstrapV5, breakpointsSematic, breakpointsTailwind, breakpointsVuetify, createFetch, createGlobalState, onClickOutside, onKeyDown, onKeyPressed, onKeyStroke, onKeyUp, onStartTyping, templateRef, toRefs, unrefElement, useActiveElement, useAsyncState, useBattery, useBreakpoints, useBrowserLocation, useClipboard, useCssVar, useDark, useDeviceLight, useDeviceMotion, useDeviceOrientation, useDevicePixelRatio, useDevicesList, useDocumentVisibility, useElementBounding, useElementSize, useElementVisibility, useEventListener, useEventSource, useFavicon, useFetch, useFullscreen, useGeolocation, useIdle, useIntersectionObserver, useLocalStorage, useMagicKeys, useManualRefHistory, useMediaControls, useMediaQuery, useMouse, useMouseInElement, useMousePressed, useMutationObserver, useNetwork, useNow, useOnline, usePageLeave, useParallax, usePermission, usePointerSwipe, usePreferredColorScheme, usePreferredDark, usePreferredLanguages, useRafFn, useRefHistory, useResizeObserver, useScriptTag, useSessionStorage, useShare, useSpeechRecognition, useStorage, useSwipe, useTimeAgo, useTimestamp, useTitle, useTransition, useUrlSearchParams, useUserMedia, useVModel, useVModels, useWebSocket, useWebWorker, useWebWorkerFn, useWindowScroll, useWindowSize };\n","import { defineComponent as _defineComponent } from 'vue'\nimport { toDisplayString as _toDisplayString, createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"m-8 max-w-3/4 <sm:max-w-full <sm:m-4 bg-gray-50 p-4 rounded-lg shadow-lg\" }\nconst _hoisted_2 = { class: \"ml-4 w-full text-xl text-gray-400\" }\n\nimport { defineComponent, PropType } from 'vue'\nimport { useClipboard } from '@vueuse/core'\nimport { useMessage } from 'naive-ui'\n\n\nexport default _defineComponent({\n  expose: [],\n  props: {\n  color: {\n    type: Array as PropType<string[]>,\n    required: true,\n  },\n  title: {\n    type: String as PropType<string>,\n    required: false,\n  },\n},\n  setup(__props) {\n\nconst props = __props\nconst message = useMessage()\n\n\n\nfunction copy(color: string) {\n  const { copy } = useClipboard({\n    source: color,\n  })\n  copy().then(() => {\n    message.success('颜色值已复制到剪贴板')\n  })\n}\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _createVNode(\"div\", _hoisted_2, _toDisplayString(__props.title), 1),\n    (_openBlock(true), _createBlock(_Fragment, null, _renderList(__props.color, (item, index) => {\n      return (_openBlock(), _createBlock(\"div\", {\n        class: \"inline-block m-4 w-16 h-16 rounded-md shadow-lg cursor-pointer\",\n        key: index,\n        style: { background: item },\n        onClick: ($event: any) => (copy(item))\n      }, null, 12, [\"onClick\"]))\n    }), 128))\n  ]))\n}\n}\n\n})","import script from \"./Palette.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./Palette.vue?vue&type=script&lang=ts&setup=true\"\n\nexport default script","import { ref, readonly, watch } from 'vue';\nexport default function useFalseUntilTruthy(originalRef) {\n    const currentRef = ref(!!originalRef.value);\n    if (currentRef.value)\n        return readonly(currentRef);\n    const stop = watch(originalRef, (value) => {\n        if (value) {\n            currentRef.value = true;\n            stop();\n        }\n    });\n    return readonly(currentRef);\n}\n","export function getSlot(slots, slotName = 'default') {\n    const slot = slots[slotName];\n    if (slot === undefined) {\n        throw new Error(`[vueuc/binder]: slot[${slotName}] is empty.`);\n    }\n    return slot();\n}\nexport function getFirstVNode(slots, slotName = 'default') {\n    const slot = slots[slotName];\n    if (slot === undefined) {\n        throw new Error(`[vueuc/binder]: slot[${slotName}] is empty.`);\n    }\n    const content = slot();\n    // vue will normalize the slot, so slot must be an array\n    if (content.length === 1) {\n        return content[0];\n    }\n    else {\n        throw new Error(`[vueuc/binder]: slot[${slotName}] should have exactly one child.`);\n    }\n}\n","import { Teleport, h, toRef, computed, defineComponent } from 'vue';\nimport { useFalseUntilTruthy } from 'vooks';\nimport { getSlot } from '../../shared/v-node';\nexport default defineComponent({\n    name: 'LazyTeleport',\n    props: {\n        to: {\n            type: [String, Object],\n            default: undefined\n        },\n        disabled: Boolean,\n        show: {\n            type: Boolean,\n            required: true\n        }\n    },\n    setup(props) {\n        return {\n            showTeleport: useFalseUntilTruthy(toRef(props, 'show')),\n            mergedTo: computed(() => {\n                const { to } = props;\n                return to !== null && to !== void 0 ? to : 'body';\n            })\n        };\n    },\n    render() {\n        return this.showTeleport\n            ? this.disabled\n                ? getSlot(this.$slots)\n                : h(Teleport, {\n                    disabled: this.disabled,\n                    to: this.mergedTo\n                }, getSlot(this.$slots))\n            : null;\n    }\n});\n","import { watch, computed } from 'vue';\nexport default function useMergedState(controlledStateRef, uncontrolledStateRef) {\n    watch(controlledStateRef, value => {\n        if (value !== undefined) {\n            uncontrolledStateRef.value = value;\n        }\n    });\n    return computed(() => {\n        if (controlledStateRef.value === undefined) {\n            return uncontrolledStateRef.value;\n        }\n        return controlledStateRef.value;\n    });\n}\n","function unwrapElement(target) {\n    if (typeof target === 'string')\n        return document.querySelector(target);\n    if (typeof target === 'function')\n        return target();\n    return target;\n}\nexport { unwrapElement };\n","function getParentNode(node) {\n    // document type\n    if (node.nodeType === 9) {\n        return null;\n    }\n    return node.parentNode;\n}\nexport function getScrollParent(node) {\n    if (node === null)\n        return null;\n    const parentNode = getParentNode(node);\n    if (parentNode === null) {\n        return null;\n    }\n    // Document\n    if (parentNode.nodeType === 9) {\n        return document.documentElement;\n    }\n    // Element\n    if (parentNode.nodeType === 1) {\n        // Firefox want us to check `-x` and `-y` variations as well\n        const { overflow, overflowX, overflowY } = getComputedStyle(parentNode);\n        if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n            return parentNode;\n        }\n    }\n    return getScrollParent(parentNode);\n}\n","export default {\n    width: '44px',\n    height: '44px',\n    borderRadius: '22px',\n    iconSize: '26px'\n};\n","import commonVariables from './_common';\nimport { commonLight } from '../../_styles/common';\nconst self = (vars) => {\n    const { popoverColor, textColor2, primaryColorHover, primaryColorPressed } = vars;\n    return Object.assign(Object.assign({}, commonVariables), { color: popoverColor, textColor: textColor2, iconColor: textColor2, iconColorHover: primaryColorHover, iconColorPressed: primaryColorPressed, boxShadow: '0 2px 8px 0px rgba(0, 0, 0, .12)', boxShadowHover: '0 2px 12px 0px rgba(0, 0, 0, .18)', boxShadowPressed: '0 2px 12px 0px rgba(0, 0, 0, .18)' });\n};\nconst backTopLight = {\n    name: 'BackTop',\n    common: commonLight,\n    self\n};\nexport default backTopLight;\n","import { h } from 'vue';\nexport default (h(\"svg\", { viewBox: \"0 0 24 24\", version: \"1.1\", xmlns: \"http://www.w3.org/2000/svg\", xlinkHref: \"http://www.w3.org/1999/xlink\" },\n    h(\"g\", { stroke: \"none\", \"stroke-width\": \"1\", \"fill-rule\": \"evenodd\" },\n        h(\"g\", { transform: \"translate(-139.000000, -4423.000000)\", \"fill-rule\": \"nonzero\" },\n            h(\"g\", { transform: \"translate(120.000000, 4285.000000)\" },\n                h(\"g\", { transform: \"translate(7.000000, 126.000000)\" },\n                    h(\"g\", { transform: \"translate(24.000000, 24.000000) scale(1, -1) translate(-24.000000, -24.000000) translate(12.000000, 12.000000)\" },\n                        h(\"g\", { transform: \"translate(4.000000, 2.000000)\" },\n                            h(\"path\", { d: \"M8,0 C8.51283584,0 8.93550716,0.38604019 8.99327227,0.883378875 L9,1 L9,10.584 L12.2928932,7.29289322 C12.6834175,6.90236893 13.3165825,6.90236893 13.7071068,7.29289322 C14.0675907,7.65337718 14.0953203,8.22060824 13.7902954,8.61289944 L13.7071068,8.70710678 L8.70710678,13.7071068 L8.62544899,13.7803112 L8.618,13.784 L8.59530661,13.8036654 L8.4840621,13.8753288 L8.37133602,13.9287745 L8.22929083,13.9735893 L8.14346259,13.9897165 L8.03324678,13.9994506 L7.9137692,13.9962979 L7.77070917,13.9735893 L7.6583843,13.9401293 L7.57677845,13.9063266 L7.47929125,13.8540045 L7.4048407,13.8036865 L7.38131006,13.7856883 C7.35030318,13.7612383 7.32077858,13.7349921 7.29289322,13.7071068 L2.29289322,8.70710678 L2.20970461,8.61289944 C1.90467972,8.22060824 1.93240926,7.65337718 2.29289322,7.29289322 C2.65337718,6.93240926 3.22060824,6.90467972 3.61289944,7.20970461 L3.70710678,7.29289322 L7,10.585 L7,1 L7.00672773,0.883378875 C7.06449284,0.38604019 7.48716416,0 8,0 Z\" }),\n                            h(\"path\", { d: \"M14.9333333,15.9994506 C15.5224371,15.9994506 16,16.4471659 16,16.9994506 C16,17.5122865 15.5882238,17.9349578 15.0577292,17.9927229 L14.9333333,17.9994506 L1.06666667,17.9994506 C0.477562934,17.9994506 0,17.5517354 0,16.9994506 C0,16.4866148 0.411776203,16.0639435 0.9422708,16.0061783 L1.06666667,15.9994506 L14.9333333,15.9994506 Z\" })))))))));\n","import { c } from '../../_utils/cssr';\nimport commonVariables from '../common/_common';\nconst {\n  cubicBezierEaseIn,\n  cubicBezierEaseOut,\n  transformDebounceScale\n} = commonVariables;\nexport default function ({\n  transformOrigin = 'inherit',\n  duration = '.2s',\n  enterScale = '.9',\n  originalTransform = '',\n  originalTransition = ''\n} = {}) {\n  return [c('&.fade-in-scale-up-transition-leave-active', {\n    transformOrigin,\n    transition: `opacity ${duration} ${cubicBezierEaseIn}, transform ${duration} ${cubicBezierEaseIn} ${originalTransition && ',' + originalTransition}`\n  }), c('&.fade-in-scale-up-transition-enter-active', {\n    transformOrigin,\n    transition: `opacity ${duration} ${cubicBezierEaseOut}, transform ${duration} ${cubicBezierEaseOut} ${originalTransition && ',' + originalTransition}`\n  }), c('&.fade-in-scale-up-transition-enter-from, &.fade-in-scale-up-transition-leave-to', {\n    opacity: 0,\n    transform: `scale(${enterScale}) ${originalTransform}`\n  }), c('&.fade-in-scale-up-transition-leave-from, &.fade-in-scale-up-transition-enter-to', {\n    opacity: 1,\n    transform: `scale(${transformDebounceScale}) ${originalTransform}`\n  })];\n}","import { c, cB, cM } from '../../../_utils/cssr';\nimport fadeInScaleUpTransition from '../../../_styles/transitions/fade-in-scale-up.cssr'; // vars:\n// --bezier\n// --border-radius\n// --height\n// --width\n// --box-shadow\n// --box-shadow-hover\n// --box-shadow-pressed\n// --color\n// --icon-size\n// --icon-color\n// --icon-color-hover\n// --icon-color-pressed\n// --text-color\n\nexport default cB('back-top', `\n position: fixed;\n right: 40px;\n bottom: 40px;\n cursor: pointer;\n display: flex;\n align-items: center;\n justify-content: center;\n color: var(--text-color);\n transition:\n color .3s var(--bezier),\n box-shadow .3s var(--bezier),\n background-color .3s var(--bezier);\n border-radius: var(--border-radius);\n height: var(--height);\n min-width: var(--width);\n box-shadow: var(--box-shadow);\n background-color: var(--color);\n`, [fadeInScaleUpTransition(), cM('transition-disabled', {\n  transition: 'none !important'\n}), cB('base-icon', `\n font-size: var(--icon-size);\n color: var(--icon-color);\n transition: color .3s var(--bezier);\n `), c('svg', {\n  pointerEvents: 'none'\n}), c('&:hover', {\n  boxShadow: 'var(--box-shadow-hover)'\n}, [cB('base-icon', {\n  color: 'var(--icon-color-hover)'\n})]), c('&:active', {\n  boxShadow: 'var(--box-shadow-pressed)'\n}, [cB('base-icon', {\n  color: 'var(--icon-color-pressed)'\n})])]);","import { h, ref, computed, toRef, watch, nextTick, defineComponent, renderSlot, mergeProps, Transition, onMounted, onBeforeUnmount } from 'vue';\nimport { VLazyTeleport } from 'vueuc';\nimport { useIsMounted, useMergedState } from 'vooks';\nimport { getScrollParent, unwrapElement } from 'seemly';\nimport { useConfig, useTheme } from '../../_mixins';\nimport { NBaseIcon } from '../../_internal';\nimport { formatLength, warn } from '../../_utils';\nimport { backTopLight } from '../styles';\nimport BackTopIcon from './BackTopIcon';\nimport style from './styles/index.cssr';\nconst backTopProps = Object.assign(Object.assign({}, useTheme.props), { show: {\n        type: Boolean,\n        default: undefined\n    }, right: {\n        type: [Number, String],\n        default: 40\n    }, bottom: {\n        type: [Number, String],\n        default: 40\n    }, to: {\n        type: [String, Object],\n        default: 'body'\n    }, visibilityHeight: {\n        type: Number,\n        default: 180\n    }, listenTo: [String, Object, Function], \n    // eslint-disable-next-line vue/prop-name-casing\n    'onUpdate:show': {\n        type: Function,\n        default: () => { }\n    }, \n    // deprecated\n    target: {\n        type: Function,\n        validator: () => {\n            warn('back-top', '`target` is deprecated, please use `listen-to` instead.');\n            return true;\n        },\n        default: undefined\n    }, onShow: {\n        type: Function,\n        validator: () => {\n            warn('back-top', '`on-show` is deprecated, please use `on-update:show` instead.');\n            return true;\n        },\n        default: undefined\n    }, onHide: {\n        type: Function,\n        validator: () => {\n            warn('back-top', '`on-hide` is deprecated, please use `on-update:show` instead.');\n            return true;\n        },\n        default: undefined\n    } });\nexport default defineComponent({\n    name: 'BackTop',\n    // make style applied to back-top button\n    inheritAttrs: false,\n    props: backTopProps,\n    setup(props) {\n        const { mergedClsPrefixRef } = useConfig(props);\n        const scrollTopRef = ref(null);\n        const uncontrolledShowRef = computed(() => {\n            if (scrollTopRef.value === null)\n                return false;\n            return scrollTopRef.value >= props.visibilityHeight;\n        });\n        const DomInfoReadyRef = ref(false);\n        watch(uncontrolledShowRef, (value) => {\n            if (DomInfoReadyRef.value) {\n                props['onUpdate:show'](value);\n            }\n        });\n        const controlledShowRef = toRef(props, 'show');\n        const mergedShowRef = useMergedState(controlledShowRef, uncontrolledShowRef);\n        const transitionDisabledRef = ref(true);\n        const placeholderRef = ref(null);\n        const styleRef = computed(() => {\n            return {\n                right: formatLength(props.right),\n                bottom: formatLength(props.bottom)\n            };\n        });\n        let scrollElement;\n        let scrollListenerRegistered;\n        // deprecated\n        watch(mergedShowRef, (value) => {\n            var _a, _b;\n            if (DomInfoReadyRef.value) {\n                if (value) {\n                    (_a = props.onShow) === null || _a === void 0 ? void 0 : _a.call(props);\n                }\n                (_b = props.onHide) === null || _b === void 0 ? void 0 : _b.call(props);\n            }\n        });\n        const themeRef = useTheme('BackTop', 'BackTop', style, backTopLight, props, mergedClsPrefixRef);\n        function init() {\n            var _a;\n            if (scrollListenerRegistered)\n                return;\n            scrollListenerRegistered = true;\n            const scrollEl = ((_a = props.target) === null || _a === void 0 ? void 0 : _a.call(props)) ||\n                unwrapElement(props.listenTo) ||\n                getScrollParent(placeholderRef.value);\n            if (!scrollEl) {\n                if (process.env.NODE_ENV !== 'production') {\n                    warn('back-top', 'Container of back-top element is not found. This could be a bug of naive-ui.');\n                }\n                return;\n            }\n            scrollElement = scrollEl;\n            const { to } = props;\n            const target = typeof to === 'string' ? document.querySelector(to) : to;\n            if (process.env.NODE_ENV !== 'production' && !target) {\n                warn('back-top', 'Target is not found.');\n            }\n            if (scrollEl) {\n                scrollEl.addEventListener('scroll', handleScroll);\n                handleScroll();\n            }\n        }\n        function handleClick(e) {\n            if (scrollElement.nodeName === '#document') {\n                ;\n                scrollElement.documentElement.scrollTo({\n                    top: 0,\n                    behavior: 'smooth'\n                });\n            }\n            else {\n                scrollElement.scrollTo({\n                    top: 0,\n                    behavior: 'smooth'\n                });\n            }\n        }\n        function handleScroll() {\n            if (scrollElement.nodeName === '#document') {\n                scrollTopRef.value = scrollElement.documentElement.scrollTop;\n            }\n            else {\n                scrollTopRef.value = scrollElement.scrollTop;\n            }\n            if (!DomInfoReadyRef.value) {\n                void nextTick(() => {\n                    DomInfoReadyRef.value = true;\n                });\n            }\n        }\n        function handleAfterEnter() {\n            transitionDisabledRef.value = false;\n        }\n        onMounted(() => {\n            init();\n            transitionDisabledRef.value = mergedShowRef.value;\n        });\n        onBeforeUnmount(() => {\n            if (scrollElement) {\n                scrollElement.removeEventListener('scroll', handleScroll);\n            }\n        });\n        return {\n            placeholderRef,\n            style: styleRef,\n            mergedShow: mergedShowRef,\n            isMounted: useIsMounted(),\n            scrollElement: ref(null),\n            scrollTop: scrollTopRef,\n            DomInfoReady: DomInfoReadyRef,\n            transitionDisabled: transitionDisabledRef,\n            mergedClsPrefix: mergedClsPrefixRef,\n            handleAfterEnter,\n            handleScroll,\n            handleClick,\n            cssVars: computed(() => {\n                const { self: { color, boxShadow, boxShadowHover, boxShadowPressed, iconColor, iconColorHover, iconColorPressed, width, height, iconSize, borderRadius, textColor }, common: { cubicBezierEaseInOut } } = themeRef.value;\n                return {\n                    '--bezier': cubicBezierEaseInOut,\n                    '--border-radius': borderRadius,\n                    '--height': height,\n                    '--width': width,\n                    '--box-shadow': boxShadow,\n                    '--box-shadow-hover': boxShadowHover,\n                    '--box-shadow-pressed': boxShadowPressed,\n                    '--color': color,\n                    '--icon-size': iconSize,\n                    '--icon-color': iconColor,\n                    '--icon-color-hover': iconColorHover,\n                    '--icon-color-pressed': iconColorPressed,\n                    '--text-color': textColor\n                };\n            })\n        };\n    },\n    render() {\n        const { mergedClsPrefix } = this;\n        return (h(\"div\", { ref: \"placeholderRef\", class: `${mergedClsPrefix}-back-top-placeholder`, style: \"display: none\", \"aria-hidden\": true },\n            h(VLazyTeleport, { to: this.to, show: this.mergedShow }, {\n                default: () => (h(Transition, { name: \"fade-in-scale-up-transition\", appear: this.isMounted, onAfterEnter: this.handleAfterEnter }, {\n                    default: () => this.mergedShow\n                        ? h('div', mergeProps(this.$attrs, {\n                            class: [\n                                `${mergedClsPrefix}-back-top`,\n                                {\n                                    [`${mergedClsPrefix}-back-top--transition-disabled`]: this\n                                        .transitionDisabled\n                                }\n                            ],\n                            style: Object.assign(Object.assign({}, this.style), this.cssVars),\n                            onClick: this.handleClick\n                        }), [\n                            renderSlot(this.$slots, 'default', undefined, () => [\n                                h(NBaseIcon, { clsPrefix: mergedClsPrefix }, { default: () => BackTopIcon })\n                            ])\n                        ])\n                        : null\n                }))\n            })));\n    }\n});\n","import { defineComponent as _defineComponent } from 'vue'\nimport { createVNode as _createVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createBlock as _createBlock, unref as _unref } from \"vue\"\n\nconst _hoisted_1 = { class: \"flex flex-col items-center my-0 mx-auto pt-8 min-h-full bg-gray-200\" }\nconst _hoisted_2 = /*#__PURE__*/_createVNode(\"div\", { class: \"m-4 text-gray-400 text-4xl\" }, \"中性色版\", -1)\n\nimport Palette from '../../components/Palette.vue'\nimport { NBackTop } from 'naive-ui'\n\ninterface PaletteData {\n  title: string\n  color: string[]\n}\n\n\nexport default _defineComponent({\n  expose: [],\n  setup(__props) {\n\nconst paletteDataList: PaletteData[] = [\n  {\n    title: '中国调色板',\n    color: [\n      '#eccc68',\n      '#ff7f50',\n      '#ff6b81',\n      '#a4b0be',\n      '#57606f',\n      '#2f3542',\n      '#747d8c',\n      '#ff4757',\n      '#ff6348',\n      '#ffa502',\n      '#7bed9f',\n      '#70a1ff',\n      '#5352ed',\n      '#ffffff',\n      '#dfe4ea',\n      '#ced6e0',\n      '#f1f2f6',\n      '#3742fa',\n      '#1e90ff',\n      '#2ed573',\n    ],\n  },\n  {\n    title: '美国调色板',\n    color: [\n      '#55efc4',\n      '#81ecec',\n      '#74b9ff',\n      '#a4b0be',\n      '#a29bfe',\n      '#dfe6e9',\n      '#b2bec3',\n      '#6c5ce7',\n      '#0984e3',\n      '#00cec9',\n      '#00b894',\n      '#ffeaa7',\n      '#fab1a0',\n      '#ff7675',\n      '#fd79a8',\n      '#636e72',\n      '#2d3436',\n      '#e84393',\n      '#e17055',\n      '#fdcb6e',\n    ],\n  },\n  {\n    title: '澳大利亚调色板',\n    color: [\n      '#f6e58d',\n      '#ffbe76',\n      '#ff7979',\n      '#badc58',\n      '#dff9fb',\n      '#c7ecee',\n      '#6ab04c',\n      '#eb4d4b',\n      '#f0932b',\n      '#f9ca24',\n      '#7ed6df',\n      '#e056fd',\n      '#686de0',\n      '#30336b',\n      '#95afc0',\n      '#535c68',\n      '#130f40',\n      '#4834d4',\n      '#be2edd',\n      '#22a6b3',\n    ],\n  },\n  {\n    title: '英国调色板',\n    color: [\n      '#00a8ff',\n      '#9c88ff',\n      '#fbc531',\n      '#4cd137',\n      '#487eb0',\n      '#40739e',\n      '#44bd32',\n      '#e1b12c',\n      '#8c7ae6',\n      '#0097e6',\n      '#e84118',\n      '#f5f6fa',\n      '#7f8fa6',\n      '#273c75',\n      '#353b48',\n      '#2f3640',\n      '#192a56',\n      '#718093',\n      '#dcdde1',\n      '#c23616',\n    ],\n  },\n  {\n    title: '加拿大调色板',\n    color: [\n      '#ff9ff3',\n      '#feca57',\n      '#ff6b6b',\n      '#48dbfb',\n      '#1dd1a1',\n      '#10ac84',\n      '#0abde3',\n      '#ee5253',\n      '#ff9f43',\n      '#f368e0',\n      '#00d2d3',\n      '#54a0ff',\n      '#5f27cd',\n      '#c8d6e5',\n      '#576574',\n      '#222f3e',\n      '#8395a7',\n      '#341f97',\n      '#2e86de',\n      '#01a3a4',\n    ],\n  },\n  {\n    title: '荷兰调色板',\n    color: [\n      '#ffc312',\n      '#c4e538',\n      '#12cbc4',\n      '#fda7df',\n      '#ed4c67',\n      '#b53471',\n      '#d980fa',\n      '#1289a7',\n      '#a3cb38',\n      '#f79f1f',\n      '#ee5a24',\n      '#009432',\n      '#0652dd',\n      '#9980fa',\n      '#833471',\n      '#6f1e51',\n      '#5758bb',\n      '#1b1464',\n      '#006266',\n      '#ea2027',\n    ],\n  },\n  {\n    title: '法式调色板',\n    color: [\n      '#fad390',\n      '#f8c291',\n      '#6a89cc',\n      '#82ccdd',\n      '#b8e994',\n      '#78e08f',\n      '#60a3bc',\n      '#4a69bd',\n      '#e55039',\n      '#f6b93b',\n      '#fa983a',\n      '#eb2f06',\n      '#1e3799',\n      '#3c6382',\n      '#38ada9',\n      '#079992',\n      '#0a3d62',\n      '#0c2461',\n      '#b71540',\n      '#e58e26',\n    ],\n  },\n  {\n    title: '德国调色板',\n    color: [\n      '#fc5c65',\n      '#fd9644',\n      '#fed330',\n      '#26de81',\n      '#2bcbba',\n      '#0fb9b1',\n      '#20bf6b',\n      '#f7b731',\n      '#fa8231',\n      '#eb3b5a',\n      '#45aaf2',\n      '#4b7bec',\n      '#a55eea',\n      '#d1d8e0',\n      '#778ca3',\n      '#4b6584',\n      '#a5b1c2',\n      '#8854d0',\n      '#3867d6',\n      '#2d98da',\n    ],\n  },\n  {\n    title: '印度调色板',\n    color: [\n      '#fea47f',\n      '#25ccf7',\n      '#eab543',\n      '#55e6c1',\n      '#cad3c8',\n      '#2c3a47',\n      '#58b19f',\n      '#f8efba',\n      '#1b9cfc',\n      '#f97f51',\n      '#b33771',\n      '#3b3b98',\n      '#fd7272',\n      '#9aecdb',\n      '#d6a2e8',\n      '#82589f',\n      '#bdc581',\n      '#fc427b',\n      '#182c61',\n      '#6d214f',\n    ],\n  },\n  {\n    title: '俄国调色板',\n    color: [\n      '#f3a683',\n      '#f7d794',\n      '#778beb',\n      '#e77f67',\n      '#cf6a87',\n      '#c44569',\n      '#e15f41',\n      '#546de5',\n      '#f5cd79',\n      '#f19066',\n      '#786fa6',\n      '#f8a5c2',\n      '#63cdda',\n      '#ea8685',\n      '#596275',\n      '#303952',\n      '#e66767',\n      '#3dc1d3',\n      '#f78fb3',\n      '#574b90',\n    ],\n  },\n  {\n    title: '西班牙调色板',\n    color: [\n      '#40407a',\n      '#706fd3',\n      '#f7f1e3',\n      '#34ace0',\n      '#33d9b2',\n      '#218c74',\n      '#227093',\n      '#aaa69d',\n      '#474787',\n      '#2c2c54',\n      '#ff5252',\n      '#ff793f',\n      '#d1ccc0',\n      '#ffb142',\n      '#ffda79',\n      '#ccae62',\n      '#cc8e35',\n      '#84817a',\n      '#cd6133',\n      '#b33939',\n    ],\n  },\n  {\n    title: '瑞典调色板',\n    color: [\n      '#ef5777',\n      '#575fcf',\n      '#4bcffa',\n      '#34e7e4',\n      '#0be881',\n      '#05c46b',\n      '#00d8d6',\n      '#0fbcf9',\n      '#3c40c6',\n      '#f53b57',\n      '#ffc048',\n      '#ffdd59',\n      '#ff5e57',\n      '#d2dae2',\n      '#485460',\n      '#1e272e',\n      '#808e9b',\n      '#ff3f34',\n      '#ffd32a',\n      '#ffa801',\n    ],\n  },\n  {\n    title: '土耳其调色板',\n    color: [\n      '#cd84f1',\n      '#ffcccc',\n      '#ff4d4d',\n      '#ffaf40',\n      '#fffa65',\n      '#fff200',\n      '#ff9f1a',\n      '#ff3838',\n      '#ffb8b8',\n      '#c56cf0',\n      '#32ff7e',\n      '#7efff5',\n      '#18dcff',\n      '#7d5fff',\n      '#4b4b4b',\n      '#3d3d3d',\n      '#7158e2',\n      '#17c0eb',\n      '#17c0eb',\n      '#3ae374',\n    ],\n  },\n]\n\nreturn (_ctx: any,_cache: any) => {\n  return (_openBlock(), _createBlock(\"div\", _hoisted_1, [\n    _hoisted_2,\n    (_openBlock(), _createBlock(_Fragment, null, _renderList(paletteDataList, (item) => {\n      return _createVNode(Palette, {\n        key: item.title,\n        title: item.title,\n        color: item.color\n      }, null, 8, [\"title\", \"color\"])\n    }), 64)),\n    _createVNode(_unref(NBackTop), { right: 100 })\n  ]))\n}\n}\n\n})","import script from \"./ColorPicker.vue?vue&type=script&lang=ts&setup=true\"\nexport * from \"./ColorPicker.vue?vue&type=script&lang=ts&setup=true\"\n\nexport default script","import * as Vue from 'vue'\n\nvar isVue2 = false\nvar isVue3 = true\nvar Vue2 = undefined\n\nfunction install() {}\n\nexport function set(target, key, val) {\n  if (Array.isArray(target)) {\n    target.length = Math.max(target.length, key)\n    target.splice(key, 1, val)\n    return val\n  }\n  target[key] = val\n  return val\n}\n\nexport function del(target, key) {\n  if (Array.isArray(target)) {\n    target.splice(key, 1)\n    return\n  }\n  delete target[key]\n}\n\nexport * from 'vue'\nexport {\n  Vue,\n  Vue2,\n  isVue2,\n  isVue3,\n  install,\n}\n","import { inject } from 'vue';\nimport { throwError } from '../../_utils';\nimport { messageApiInjectionKey } from './MessageProvider';\nexport function useMessage() {\n    const api = inject(messageApiInjectionKey, null);\n    if (api === null) {\n        throwError('use-message', 'No outer <n-message-provider /> founded.');\n    }\n    return api;\n}\n","const pureNumberRegex = /^(\\d|\\.)+$/;\nconst numberRegex = /(\\d|\\.)+/;\nfunction formatLength(length, { c = 1, offset = 0, attachPx = true } = {}) {\n    if (typeof length === 'number') {\n        const result = (length + offset) * c;\n        if (result === 0)\n            return '0';\n        return `${result}px`;\n    }\n    else if (typeof length === 'string') {\n        if (pureNumberRegex.test(length)) {\n            const result = (Number(length) + offset) * c;\n            if (attachPx) {\n                if (result === 0)\n                    return '0';\n                return `${result}px`;\n            }\n            else {\n                return `${result}`;\n            }\n        }\n        else {\n            const result = numberRegex.exec(length);\n            if (!result)\n                return length;\n            return length.replace(numberRegex, String((Number(result[0]) + offset) * c));\n        }\n    }\n    return length;\n}\nexport default formatLength;\n"],"sourceRoot":""}